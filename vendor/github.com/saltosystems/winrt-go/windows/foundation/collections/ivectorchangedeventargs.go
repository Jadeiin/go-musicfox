// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package collections

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
)

const GUIDIVectorChangedEventArgs string = "575933df-34fe-4480-af15-07691f3d5d9b"
const SignatureIVectorChangedEventArgs string = "{575933df-34fe-4480-af15-07691f3d5d9b}"

type IVectorChangedEventArgs struct {
	ole.IInspectable
}

type IVectorChangedEventArgsVtbl struct {
	ole.IInspectableVtbl

	GetCollectionChange uintptr
	GetIndex            uintptr
}

func (v *IVectorChangedEventArgs) VTable() *IVectorChangedEventArgsVtbl {
	return (*IVectorChangedEventArgsVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IVectorChangedEventArgs) GetCollectionChange() (CollectionChange, error) {
	var out CollectionChange
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCollectionChange,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out CollectionChange
	)

	if hr != 0 {
		return CollectionChangeReset, ole.NewError(hr)
	}

	return out, nil
}

func (v *IVectorChangedEventArgs) GetIndex() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIndex,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}
