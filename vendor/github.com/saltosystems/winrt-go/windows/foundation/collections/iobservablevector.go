// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package collections

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const GUIDIObservableVector string = "5917eb53-50b4-4a0d-b309-65862b3f1dbc"
const SignatureIObservableVector string = "{5917eb53-50b4-4a0d-b309-65862b3f1dbc}"

type IObservableVector struct {
	ole.IInspectable
}

type IObservableVectorVtbl struct {
	ole.IInspectableVtbl

	AddVectorChanged    uintptr
	RemoveVectorChanged uintptr
}

func (v *IObservableVector) VTable() *IObservableVectorVtbl {
	return (*IObservableVectorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IObservableVector) AddVectorChanged(vhnd *VectorChangedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddVectorChanged,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(vhnd)), // in VectorChangedEventHandler
		uintptr(unsafe.Pointer(&out)), // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *IObservableVector) RemoveVectorChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveVectorChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}
