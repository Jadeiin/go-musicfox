// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package fileproperties

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/collections"
)

const SignatureMusicProperties string = "rc(Windows.Storage.FileProperties.MusicProperties;{bc8aab62-66ec-419a-bc5d-ca65a4cb46da})"

type MusicProperties struct {
	ole.IUnknown
}

func (impl *MusicProperties) GetAlbum() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetAlbum()
}

func (impl *MusicProperties) SetAlbum(value string) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetAlbum(value)
}

func (impl *MusicProperties) GetArtist() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetArtist()
}

func (impl *MusicProperties) SetArtist(value string) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetArtist(value)
}

func (impl *MusicProperties) GetGenre() (*collections.IVector, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetGenre()
}

func (impl *MusicProperties) GetTrackNumber() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetTrackNumber()
}

func (impl *MusicProperties) SetTrackNumber(value uint32) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetTrackNumber(value)
}

func (impl *MusicProperties) GetTitle() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetTitle()
}

func (impl *MusicProperties) SetTitle(value string) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetTitle(value)
}

func (impl *MusicProperties) GetRating() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetRating()
}

func (impl *MusicProperties) SetRating(value uint32) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetRating(value)
}

func (impl *MusicProperties) GetDuration() (foundation.TimeSpan, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetDuration()
}

func (impl *MusicProperties) GetBitrate() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetBitrate()
}

func (impl *MusicProperties) GetAlbumArtist() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetAlbumArtist()
}

func (impl *MusicProperties) SetAlbumArtist(value string) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetAlbumArtist(value)
}

func (impl *MusicProperties) GetComposers() (*collections.IVector, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetComposers()
}

func (impl *MusicProperties) GetConductors() (*collections.IVector, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetConductors()
}

func (impl *MusicProperties) GetSubtitle() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetSubtitle()
}

func (impl *MusicProperties) SetSubtitle(value string) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetSubtitle(value)
}

func (impl *MusicProperties) GetProducers() (*collections.IVector, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetProducers()
}

func (impl *MusicProperties) GetPublisher() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetPublisher()
}

func (impl *MusicProperties) SetPublisher(value string) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetPublisher(value)
}

func (impl *MusicProperties) GetWriters() (*collections.IVector, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetWriters()
}

func (impl *MusicProperties) GetYear() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.GetYear()
}

func (impl *MusicProperties) SetYear(value uint32) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMusicProperties))
	defer itf.Release()
	v := (*iMusicProperties)(unsafe.Pointer(itf))
	return v.SetYear(value)
}

func (impl *MusicProperties) RetrievePropertiesAsync(propertiesToRetrieve *collections.IIterable) (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDIStorageItemExtraProperties))
	defer itf.Release()
	v := (*IStorageItemExtraProperties)(unsafe.Pointer(itf))
	return v.RetrievePropertiesAsync(propertiesToRetrieve)
}

func (impl *MusicProperties) SavePropertiesAsync(propertiesToSave *collections.IIterable) (*foundation.IAsyncAction, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDIStorageItemExtraProperties))
	defer itf.Release()
	v := (*IStorageItemExtraProperties)(unsafe.Pointer(itf))
	return v.SavePropertiesAsync(propertiesToSave)
}

func (impl *MusicProperties) SavePropertiesAsyncOverloadDefault() (*foundation.IAsyncAction, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDIStorageItemExtraProperties))
	defer itf.Release()
	v := (*IStorageItemExtraProperties)(unsafe.Pointer(itf))
	return v.SavePropertiesAsyncOverloadDefault()
}

const GUIDiMusicProperties string = "bc8aab62-66ec-419a-bc5d-ca65a4cb46da"
const SignatureiMusicProperties string = "{bc8aab62-66ec-419a-bc5d-ca65a4cb46da}"

type iMusicProperties struct {
	ole.IInspectable
}

type iMusicPropertiesVtbl struct {
	ole.IInspectableVtbl

	GetAlbum       uintptr
	SetAlbum       uintptr
	GetArtist      uintptr
	SetArtist      uintptr
	GetGenre       uintptr
	GetTrackNumber uintptr
	SetTrackNumber uintptr
	GetTitle       uintptr
	SetTitle       uintptr
	GetRating      uintptr
	SetRating      uintptr
	GetDuration    uintptr
	GetBitrate     uintptr
	GetAlbumArtist uintptr
	SetAlbumArtist uintptr
	GetComposers   uintptr
	GetConductors  uintptr
	GetSubtitle    uintptr
	SetSubtitle    uintptr
	GetProducers   uintptr
	GetPublisher   uintptr
	SetPublisher   uintptr
	GetWriters     uintptr
	GetYear        uintptr
	SetYear        uintptr
}

func (v *iMusicProperties) VTable() *iMusicPropertiesVtbl {
	return (*iMusicPropertiesVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMusicProperties) GetAlbum() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAlbum,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iMusicProperties) SetAlbum(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetAlbum,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMusicProperties) GetArtist() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetArtist,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iMusicProperties) SetArtist(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetArtist,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMusicProperties) GetGenre() (*collections.IVector, error) {
	var out *collections.IVector
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetGenre,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVector
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) GetTrackNumber() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetTrackNumber,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) SetTrackNumber(value uint32) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetTrackNumber,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(value),             // in uint32
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMusicProperties) GetTitle() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetTitle,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iMusicProperties) SetTitle(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetTitle,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMusicProperties) GetRating() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetRating,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) SetRating(value uint32) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetRating,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(value),             // in uint32
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMusicProperties) GetDuration() (foundation.TimeSpan, error) {
	var out foundation.TimeSpan
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDuration,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.TimeSpan
	)

	if hr != 0 {
		return foundation.TimeSpan{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) GetBitrate() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetBitrate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) GetAlbumArtist() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAlbumArtist,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iMusicProperties) SetAlbumArtist(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetAlbumArtist,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMusicProperties) GetComposers() (*collections.IVector, error) {
	var out *collections.IVector
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetComposers,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVector
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) GetConductors() (*collections.IVector, error) {
	var out *collections.IVector
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetConductors,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVector
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) GetSubtitle() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetSubtitle,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iMusicProperties) SetSubtitle(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetSubtitle,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMusicProperties) GetProducers() (*collections.IVector, error) {
	var out *collections.IVector
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetProducers,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVector
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) GetPublisher() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPublisher,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iMusicProperties) SetPublisher(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetPublisher,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMusicProperties) GetWriters() (*collections.IVector, error) {
	var out *collections.IVector
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetWriters,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVector
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) GetYear() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetYear,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMusicProperties) SetYear(value uint32) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetYear,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(value),             // in uint32
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}
