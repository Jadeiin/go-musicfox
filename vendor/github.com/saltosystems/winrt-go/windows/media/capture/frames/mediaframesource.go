// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package frames

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/collections"
	"github.com/saltosystems/winrt-go/windows/media/devices/core"
)

const SignatureMediaFrameSource string = "rc(Windows.Media.Capture.Frames.MediaFrameSource;{d6782953-90db-46a8-8add-2aa884a8d253})"

type MediaFrameSource struct {
	ole.IUnknown
}

func (impl *MediaFrameSource) GetInfo() (*MediaFrameSourceInfo, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaFrameSource))
	defer itf.Release()
	v := (*iMediaFrameSource)(unsafe.Pointer(itf))
	return v.GetInfo()
}

func (impl *MediaFrameSource) GetController() (*MediaFrameSourceController, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaFrameSource))
	defer itf.Release()
	v := (*iMediaFrameSource)(unsafe.Pointer(itf))
	return v.GetController()
}

func (impl *MediaFrameSource) GetSupportedFormats() (*collections.IVectorView, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaFrameSource))
	defer itf.Release()
	v := (*iMediaFrameSource)(unsafe.Pointer(itf))
	return v.GetSupportedFormats()
}

func (impl *MediaFrameSource) GetCurrentFormat() (*MediaFrameFormat, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaFrameSource))
	defer itf.Release()
	v := (*iMediaFrameSource)(unsafe.Pointer(itf))
	return v.GetCurrentFormat()
}

func (impl *MediaFrameSource) SetFormatAsync(format *MediaFrameFormat) (*foundation.IAsyncAction, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaFrameSource))
	defer itf.Release()
	v := (*iMediaFrameSource)(unsafe.Pointer(itf))
	return v.SetFormatAsync(format)
}

func (impl *MediaFrameSource) AddFormatChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaFrameSource))
	defer itf.Release()
	v := (*iMediaFrameSource)(unsafe.Pointer(itf))
	return v.AddFormatChanged(handler)
}

func (impl *MediaFrameSource) RemoveFormatChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaFrameSource))
	defer itf.Release()
	v := (*iMediaFrameSource)(unsafe.Pointer(itf))
	return v.RemoveFormatChanged(token)
}

func (impl *MediaFrameSource) TryGetCameraIntrinsics(format *MediaFrameFormat) (*core.CameraIntrinsics, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaFrameSource))
	defer itf.Release()
	v := (*iMediaFrameSource)(unsafe.Pointer(itf))
	return v.TryGetCameraIntrinsics(format)
}

const GUIDiMediaFrameSource string = "d6782953-90db-46a8-8add-2aa884a8d253"
const SignatureiMediaFrameSource string = "{d6782953-90db-46a8-8add-2aa884a8d253}"

type iMediaFrameSource struct {
	ole.IInspectable
}

type iMediaFrameSourceVtbl struct {
	ole.IInspectableVtbl

	GetInfo                uintptr
	GetController          uintptr
	GetSupportedFormats    uintptr
	GetCurrentFormat       uintptr
	SetFormatAsync         uintptr
	AddFormatChanged       uintptr
	RemoveFormatChanged    uintptr
	TryGetCameraIntrinsics uintptr
}

func (v *iMediaFrameSource) VTable() *iMediaFrameSourceVtbl {
	return (*iMediaFrameSourceVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaFrameSource) GetInfo() (*MediaFrameSourceInfo, error) {
	var out *MediaFrameSourceInfo
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetInfo,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaFrameSourceInfo
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaFrameSource) GetController() (*MediaFrameSourceController, error) {
	var out *MediaFrameSourceController
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetController,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaFrameSourceController
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaFrameSource) GetSupportedFormats() (*collections.IVectorView, error) {
	var out *collections.IVectorView
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetSupportedFormats,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVectorView
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaFrameSource) GetCurrentFormat() (*MediaFrameFormat, error) {
	var out *MediaFrameFormat
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCurrentFormat,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaFrameFormat
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaFrameSource) SetFormatAsync(format *MediaFrameFormat) (*foundation.IAsyncAction, error) {
	var out *foundation.IAsyncAction
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetFormatAsync,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(format)), // in MediaFrameFormat
		uintptr(unsafe.Pointer(&out)),   // out foundation.IAsyncAction
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaFrameSource) AddFormatChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddFormatChanged,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaFrameSource) RemoveFormatChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveFormatChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaFrameSource) TryGetCameraIntrinsics(format *MediaFrameFormat) (*core.CameraIntrinsics, error) {
	var out *core.CameraIntrinsics
	hr, _, _ := syscall.SyscallN(
		v.VTable().TryGetCameraIntrinsics,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(format)), // in MediaFrameFormat
		uintptr(unsafe.Pointer(&out)),   // out core.CameraIntrinsics
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
