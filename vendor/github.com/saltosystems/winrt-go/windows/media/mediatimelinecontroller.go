// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package media

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureMediaTimelineController string = "rc(Windows.Media.MediaTimelineController;{8ed361f3-0b78-4360-bf71-0c841999ea1b})"

type MediaTimelineController struct {
	ole.IUnknown
}

func NewMediaTimelineController() (*MediaTimelineController, error) {
	inspectable, err := ole.RoActivateInstance("Windows.Media.MediaTimelineController")
	if err != nil {
		return nil, err
	}
	return (*MediaTimelineController)(unsafe.Pointer(inspectable)), nil
}

func (impl *MediaTimelineController) Start() error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.Start()
}

func (impl *MediaTimelineController) Resume() error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.Resume()
}

func (impl *MediaTimelineController) Pause() error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.Pause()
}

func (impl *MediaTimelineController) GetPosition() (foundation.TimeSpan, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.GetPosition()
}

func (impl *MediaTimelineController) SetPosition(value foundation.TimeSpan) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.SetPosition(value)
}

func (impl *MediaTimelineController) GetClockRate() (float64, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.GetClockRate()
}

func (impl *MediaTimelineController) SetClockRate(value float64) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.SetClockRate(value)
}

func (impl *MediaTimelineController) GetState() (MediaTimelineControllerState, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.GetState()
}

func (impl *MediaTimelineController) AddPositionChanged(positionChangedEventHandler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.AddPositionChanged(positionChangedEventHandler)
}

func (impl *MediaTimelineController) RemovePositionChanged(eventCookie foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.RemovePositionChanged(eventCookie)
}

func (impl *MediaTimelineController) AddStateChanged(stateChangedEventHandler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.AddStateChanged(stateChangedEventHandler)
}

func (impl *MediaTimelineController) RemoveStateChanged(eventCookie foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController))
	defer itf.Release()
	v := (*iMediaTimelineController)(unsafe.Pointer(itf))
	return v.RemoveStateChanged(eventCookie)
}

func (impl *MediaTimelineController) GetDuration() (*foundation.IReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController2))
	defer itf.Release()
	v := (*iMediaTimelineController2)(unsafe.Pointer(itf))
	return v.GetDuration()
}

func (impl *MediaTimelineController) SetDuration(value *foundation.IReference) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController2))
	defer itf.Release()
	v := (*iMediaTimelineController2)(unsafe.Pointer(itf))
	return v.SetDuration(value)
}

func (impl *MediaTimelineController) GetIsLoopingEnabled() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController2))
	defer itf.Release()
	v := (*iMediaTimelineController2)(unsafe.Pointer(itf))
	return v.GetIsLoopingEnabled()
}

func (impl *MediaTimelineController) SetIsLoopingEnabled(value bool) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController2))
	defer itf.Release()
	v := (*iMediaTimelineController2)(unsafe.Pointer(itf))
	return v.SetIsLoopingEnabled(value)
}

func (impl *MediaTimelineController) AddFailed(eventHandler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController2))
	defer itf.Release()
	v := (*iMediaTimelineController2)(unsafe.Pointer(itf))
	return v.AddFailed(eventHandler)
}

func (impl *MediaTimelineController) RemoveFailed(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController2))
	defer itf.Release()
	v := (*iMediaTimelineController2)(unsafe.Pointer(itf))
	return v.RemoveFailed(token)
}

func (impl *MediaTimelineController) AddEnded(eventHandler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController2))
	defer itf.Release()
	v := (*iMediaTimelineController2)(unsafe.Pointer(itf))
	return v.AddEnded(eventHandler)
}

func (impl *MediaTimelineController) RemoveEnded(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaTimelineController2))
	defer itf.Release()
	v := (*iMediaTimelineController2)(unsafe.Pointer(itf))
	return v.RemoveEnded(token)
}

const GUIDiMediaTimelineController string = "8ed361f3-0b78-4360-bf71-0c841999ea1b"
const SignatureiMediaTimelineController string = "{8ed361f3-0b78-4360-bf71-0c841999ea1b}"

type iMediaTimelineController struct {
	ole.IInspectable
}

type iMediaTimelineControllerVtbl struct {
	ole.IInspectableVtbl

	Start                 uintptr
	Resume                uintptr
	Pause                 uintptr
	GetPosition           uintptr
	SetPosition           uintptr
	GetClockRate          uintptr
	SetClockRate          uintptr
	GetState              uintptr
	AddPositionChanged    uintptr
	RemovePositionChanged uintptr
	AddStateChanged       uintptr
	RemoveStateChanged    uintptr
}

func (v *iMediaTimelineController) VTable() *iMediaTimelineControllerVtbl {
	return (*iMediaTimelineControllerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaTimelineController) Start() error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().Start,
		uintptr(unsafe.Pointer(v)), // this
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController) Resume() error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().Resume,
		uintptr(unsafe.Pointer(v)), // this
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController) Pause() error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().Pause,
		uintptr(unsafe.Pointer(v)), // this
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController) GetPosition() (foundation.TimeSpan, error) {
	var out foundation.TimeSpan
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPosition,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.TimeSpan
	)

	if hr != 0 {
		return foundation.TimeSpan{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController) SetPosition(value foundation.TimeSpan) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetPosition,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&value)), // in foundation.TimeSpan
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController) GetClockRate() (float64, error) {
	var out float64
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetClockRate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out float64
	)

	if hr != 0 {
		return 0.0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController) SetClockRate(value float64) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetClockRate,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(value),             // in float64
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController) GetState() (MediaTimelineControllerState, error) {
	var out MediaTimelineControllerState
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetState,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaTimelineControllerState
	)

	if hr != 0 {
		return MediaTimelineControllerStatePaused, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController) AddPositionChanged(positionChangedEventHandler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPositionChanged,
		uintptr(unsafe.Pointer(v)),                           // this
		uintptr(unsafe.Pointer(positionChangedEventHandler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),                        // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController) RemovePositionChanged(eventCookie foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePositionChanged,
		uintptr(unsafe.Pointer(v)),            // this
		uintptr(unsafe.Pointer(&eventCookie)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController) AddStateChanged(stateChangedEventHandler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddStateChanged,
		uintptr(unsafe.Pointer(v)),                        // this
		uintptr(unsafe.Pointer(stateChangedEventHandler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),                     // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController) RemoveStateChanged(eventCookie foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveStateChanged,
		uintptr(unsafe.Pointer(v)),            // this
		uintptr(unsafe.Pointer(&eventCookie)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiMediaTimelineController2 string = "ef74ea38-9e72-4df9-8355-6e90c81bbadd"
const SignatureiMediaTimelineController2 string = "{ef74ea38-9e72-4df9-8355-6e90c81bbadd}"

type iMediaTimelineController2 struct {
	ole.IInspectable
}

type iMediaTimelineController2Vtbl struct {
	ole.IInspectableVtbl

	GetDuration         uintptr
	SetDuration         uintptr
	GetIsLoopingEnabled uintptr
	SetIsLoopingEnabled uintptr
	AddFailed           uintptr
	RemoveFailed        uintptr
	AddEnded            uintptr
	RemoveEnded         uintptr
}

func (v *iMediaTimelineController2) VTable() *iMediaTimelineController2Vtbl {
	return (*iMediaTimelineController2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaTimelineController2) GetDuration() (*foundation.IReference, error) {
	var out *foundation.IReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDuration,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController2) SetDuration(value *foundation.IReference) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetDuration,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.IReference
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController2) GetIsLoopingEnabled() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsLoopingEnabled,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController2) SetIsLoopingEnabled(value bool) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetIsLoopingEnabled,
		uintptr(unsafe.Pointer(v)),                // this
		uintptr(*(*byte)(unsafe.Pointer(&value))), // in bool
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController2) AddFailed(eventHandler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddFailed,
		uintptr(unsafe.Pointer(v)),            // this
		uintptr(unsafe.Pointer(eventHandler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),         // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController2) RemoveFailed(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveFailed,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaTimelineController2) AddEnded(eventHandler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddEnded,
		uintptr(unsafe.Pointer(v)),            // this
		uintptr(unsafe.Pointer(eventHandler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),         // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaTimelineController2) RemoveEnded(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveEnded,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}
