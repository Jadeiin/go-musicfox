// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package playback

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/collections"
	"github.com/saltosystems/winrt-go/windows/media/mediaproperties"
)

const SignatureMediaPlaybackSession string = "rc(Windows.Media.Playback.MediaPlaybackSession;{c32b683d-0407-41ba-8946-8b345a5a5435})"

type MediaPlaybackSession struct {
	ole.IUnknown
}

func (impl *MediaPlaybackSession) AddPlaybackStateChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddPlaybackStateChanged(value)
}

func (impl *MediaPlaybackSession) RemovePlaybackStateChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemovePlaybackStateChanged(token)
}

func (impl *MediaPlaybackSession) AddPlaybackRateChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddPlaybackRateChanged(value)
}

func (impl *MediaPlaybackSession) RemovePlaybackRateChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemovePlaybackRateChanged(token)
}

func (impl *MediaPlaybackSession) AddSeekCompleted(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddSeekCompleted(value)
}

func (impl *MediaPlaybackSession) RemoveSeekCompleted(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemoveSeekCompleted(token)
}

func (impl *MediaPlaybackSession) AddBufferingStarted(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddBufferingStarted(value)
}

func (impl *MediaPlaybackSession) RemoveBufferingStarted(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemoveBufferingStarted(token)
}

func (impl *MediaPlaybackSession) AddBufferingEnded(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddBufferingEnded(value)
}

func (impl *MediaPlaybackSession) RemoveBufferingEnded(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemoveBufferingEnded(token)
}

func (impl *MediaPlaybackSession) AddBufferingProgressChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddBufferingProgressChanged(value)
}

func (impl *MediaPlaybackSession) RemoveBufferingProgressChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemoveBufferingProgressChanged(token)
}

func (impl *MediaPlaybackSession) AddDownloadProgressChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddDownloadProgressChanged(value)
}

func (impl *MediaPlaybackSession) RemoveDownloadProgressChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemoveDownloadProgressChanged(token)
}

func (impl *MediaPlaybackSession) AddNaturalDurationChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddNaturalDurationChanged(value)
}

func (impl *MediaPlaybackSession) RemoveNaturalDurationChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemoveNaturalDurationChanged(token)
}

func (impl *MediaPlaybackSession) AddPositionChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddPositionChanged(value)
}

func (impl *MediaPlaybackSession) RemovePositionChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemovePositionChanged(token)
}

func (impl *MediaPlaybackSession) AddNaturalVideoSizeChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.AddNaturalVideoSizeChanged(value)
}

func (impl *MediaPlaybackSession) RemoveNaturalVideoSizeChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.RemoveNaturalVideoSizeChanged(token)
}

func (impl *MediaPlaybackSession) GetMediaPlayer() (*MediaPlayer, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetMediaPlayer()
}

func (impl *MediaPlaybackSession) GetNaturalDuration() (foundation.TimeSpan, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetNaturalDuration()
}

func (impl *MediaPlaybackSession) GetPosition() (foundation.TimeSpan, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetPosition()
}

func (impl *MediaPlaybackSession) SetPosition(value foundation.TimeSpan) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.SetPosition(value)
}

func (impl *MediaPlaybackSession) GetPlaybackState() (MediaPlaybackState, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetPlaybackState()
}

func (impl *MediaPlaybackSession) GetCanSeek() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetCanSeek()
}

func (impl *MediaPlaybackSession) GetCanPause() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetCanPause()
}

func (impl *MediaPlaybackSession) GetIsProtected() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetIsProtected()
}

func (impl *MediaPlaybackSession) GetPlaybackRate() (float64, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetPlaybackRate()
}

func (impl *MediaPlaybackSession) SetPlaybackRate(value float64) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.SetPlaybackRate(value)
}

func (impl *MediaPlaybackSession) GetBufferingProgress() (float64, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetBufferingProgress()
}

func (impl *MediaPlaybackSession) GetDownloadProgress() (float64, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetDownloadProgress()
}

func (impl *MediaPlaybackSession) GetNaturalVideoHeight() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetNaturalVideoHeight()
}

func (impl *MediaPlaybackSession) GetNaturalVideoWidth() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetNaturalVideoWidth()
}

func (impl *MediaPlaybackSession) GetNormalizedSourceRect() (foundation.Rect, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetNormalizedSourceRect()
}

func (impl *MediaPlaybackSession) SetNormalizedSourceRect(value foundation.Rect) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.SetNormalizedSourceRect(value)
}

func (impl *MediaPlaybackSession) GetStereoscopicVideoPackingMode() (mediaproperties.StereoscopicVideoPackingMode, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.GetStereoscopicVideoPackingMode()
}

func (impl *MediaPlaybackSession) SetStereoscopicVideoPackingMode(value mediaproperties.StereoscopicVideoPackingMode) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession))
	defer itf.Release()
	v := (*iMediaPlaybackSession)(unsafe.Pointer(itf))
	return v.SetStereoscopicVideoPackingMode(value)
}

func (impl *MediaPlaybackSession) AddBufferedRangesChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.AddBufferedRangesChanged(value)
}

func (impl *MediaPlaybackSession) RemoveBufferedRangesChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.RemoveBufferedRangesChanged(token)
}

func (impl *MediaPlaybackSession) AddPlayedRangesChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.AddPlayedRangesChanged(value)
}

func (impl *MediaPlaybackSession) RemovePlayedRangesChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.RemovePlayedRangesChanged(token)
}

func (impl *MediaPlaybackSession) AddSeekableRangesChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.AddSeekableRangesChanged(value)
}

func (impl *MediaPlaybackSession) RemoveSeekableRangesChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.RemoveSeekableRangesChanged(token)
}

func (impl *MediaPlaybackSession) AddSupportedPlaybackRatesChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.AddSupportedPlaybackRatesChanged(value)
}

func (impl *MediaPlaybackSession) RemoveSupportedPlaybackRatesChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.RemoveSupportedPlaybackRatesChanged(token)
}

func (impl *MediaPlaybackSession) GetSphericalVideoProjection() (*MediaPlaybackSphericalVideoProjection, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.GetSphericalVideoProjection()
}

func (impl *MediaPlaybackSession) GetIsMirroring() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.GetIsMirroring()
}

func (impl *MediaPlaybackSession) SetIsMirroring(value bool) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.SetIsMirroring(value)
}

func (impl *MediaPlaybackSession) GetBufferedRanges() (*collections.IVectorView, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.GetBufferedRanges()
}

func (impl *MediaPlaybackSession) GetPlayedRanges() (*collections.IVectorView, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.GetPlayedRanges()
}

func (impl *MediaPlaybackSession) GetSeekableRanges() (*collections.IVectorView, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.GetSeekableRanges()
}

func (impl *MediaPlaybackSession) IsSupportedPlaybackRateRange(rate1 float64, rate2 float64) (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession2))
	defer itf.Release()
	v := (*iMediaPlaybackSession2)(unsafe.Pointer(itf))
	return v.IsSupportedPlaybackRateRange(rate1, rate2)
}

func (impl *MediaPlaybackSession) GetPlaybackRotation() (mediaproperties.MediaRotation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession3))
	defer itf.Release()
	v := (*iMediaPlaybackSession3)(unsafe.Pointer(itf))
	return v.GetPlaybackRotation()
}

func (impl *MediaPlaybackSession) SetPlaybackRotation(value mediaproperties.MediaRotation) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession3))
	defer itf.Release()
	v := (*iMediaPlaybackSession3)(unsafe.Pointer(itf))
	return v.SetPlaybackRotation(value)
}

func (impl *MediaPlaybackSession) GetOutputDegradationPolicyState() (*MediaPlaybackSessionOutputDegradationPolicyState, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackSession3))
	defer itf.Release()
	v := (*iMediaPlaybackSession3)(unsafe.Pointer(itf))
	return v.GetOutputDegradationPolicyState()
}

const GUIDiMediaPlaybackSession string = "c32b683d-0407-41ba-8946-8b345a5a5435"
const SignatureiMediaPlaybackSession string = "{c32b683d-0407-41ba-8946-8b345a5a5435}"

type iMediaPlaybackSession struct {
	ole.IInspectable
}

type iMediaPlaybackSessionVtbl struct {
	ole.IInspectableVtbl

	AddPlaybackStateChanged         uintptr
	RemovePlaybackStateChanged      uintptr
	AddPlaybackRateChanged          uintptr
	RemovePlaybackRateChanged       uintptr
	AddSeekCompleted                uintptr
	RemoveSeekCompleted             uintptr
	AddBufferingStarted             uintptr
	RemoveBufferingStarted          uintptr
	AddBufferingEnded               uintptr
	RemoveBufferingEnded            uintptr
	AddBufferingProgressChanged     uintptr
	RemoveBufferingProgressChanged  uintptr
	AddDownloadProgressChanged      uintptr
	RemoveDownloadProgressChanged   uintptr
	AddNaturalDurationChanged       uintptr
	RemoveNaturalDurationChanged    uintptr
	AddPositionChanged              uintptr
	RemovePositionChanged           uintptr
	AddNaturalVideoSizeChanged      uintptr
	RemoveNaturalVideoSizeChanged   uintptr
	GetMediaPlayer                  uintptr
	GetNaturalDuration              uintptr
	GetPosition                     uintptr
	SetPosition                     uintptr
	GetPlaybackState                uintptr
	GetCanSeek                      uintptr
	GetCanPause                     uintptr
	GetIsProtected                  uintptr
	GetPlaybackRate                 uintptr
	SetPlaybackRate                 uintptr
	GetBufferingProgress            uintptr
	GetDownloadProgress             uintptr
	GetNaturalVideoHeight           uintptr
	GetNaturalVideoWidth            uintptr
	GetNormalizedSourceRect         uintptr
	SetNormalizedSourceRect         uintptr
	GetStereoscopicVideoPackingMode uintptr
	SetStereoscopicVideoPackingMode uintptr
}

func (v *iMediaPlaybackSession) VTable() *iMediaPlaybackSessionVtbl {
	return (*iMediaPlaybackSessionVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaPlaybackSession) AddPlaybackStateChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPlaybackStateChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemovePlaybackStateChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePlaybackStateChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddPlaybackRateChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPlaybackRateChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemovePlaybackRateChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePlaybackRateChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddSeekCompleted(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddSeekCompleted,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemoveSeekCompleted(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveSeekCompleted,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddBufferingStarted(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBufferingStarted,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemoveBufferingStarted(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBufferingStarted,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddBufferingEnded(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBufferingEnded,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemoveBufferingEnded(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBufferingEnded,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddBufferingProgressChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBufferingProgressChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemoveBufferingProgressChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBufferingProgressChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddDownloadProgressChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddDownloadProgressChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemoveDownloadProgressChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveDownloadProgressChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddNaturalDurationChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddNaturalDurationChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemoveNaturalDurationChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveNaturalDurationChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddPositionChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPositionChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemovePositionChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePositionChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) AddNaturalVideoSizeChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddNaturalVideoSizeChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) RemoveNaturalVideoSizeChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveNaturalVideoSizeChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) GetMediaPlayer() (*MediaPlayer, error) {
	var out *MediaPlayer
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMediaPlayer,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlayer
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetNaturalDuration() (foundation.TimeSpan, error) {
	var out foundation.TimeSpan
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetNaturalDuration,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.TimeSpan
	)

	if hr != 0 {
		return foundation.TimeSpan{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetPosition() (foundation.TimeSpan, error) {
	var out foundation.TimeSpan
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPosition,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.TimeSpan
	)

	if hr != 0 {
		return foundation.TimeSpan{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) SetPosition(value foundation.TimeSpan) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetPosition,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&value)), // in foundation.TimeSpan
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) GetPlaybackState() (MediaPlaybackState, error) {
	var out MediaPlaybackState
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPlaybackState,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackState
	)

	if hr != 0 {
		return MediaPlaybackStateNone, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetCanSeek() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCanSeek,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetCanPause() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCanPause,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetIsProtected() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsProtected,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetPlaybackRate() (float64, error) {
	var out float64
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPlaybackRate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out float64
	)

	if hr != 0 {
		return 0.0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) SetPlaybackRate(value float64) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetPlaybackRate,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(value),             // in float64
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) GetBufferingProgress() (float64, error) {
	var out float64
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetBufferingProgress,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out float64
	)

	if hr != 0 {
		return 0.0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetDownloadProgress() (float64, error) {
	var out float64
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDownloadProgress,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out float64
	)

	if hr != 0 {
		return 0.0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetNaturalVideoHeight() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetNaturalVideoHeight,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetNaturalVideoWidth() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetNaturalVideoWidth,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) GetNormalizedSourceRect() (foundation.Rect, error) {
	var out foundation.Rect
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetNormalizedSourceRect,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.Rect
	)

	if hr != 0 {
		return foundation.Rect{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) SetNormalizedSourceRect(value foundation.Rect) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetNormalizedSourceRect,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&value)), // in foundation.Rect
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession) GetStereoscopicVideoPackingMode() (mediaproperties.StereoscopicVideoPackingMode, error) {
	var out mediaproperties.StereoscopicVideoPackingMode
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetStereoscopicVideoPackingMode,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out mediaproperties.StereoscopicVideoPackingMode
	)

	if hr != 0 {
		return mediaproperties.StereoscopicVideoPackingModeNone, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession) SetStereoscopicVideoPackingMode(value mediaproperties.StereoscopicVideoPackingMode) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetStereoscopicVideoPackingMode,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(value),             // in mediaproperties.StereoscopicVideoPackingMode
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiMediaPlaybackSession2 string = "f8ba7c79-1fc8-4097-ad70-c0fa18cc0050"
const SignatureiMediaPlaybackSession2 string = "{f8ba7c79-1fc8-4097-ad70-c0fa18cc0050}"

type iMediaPlaybackSession2 struct {
	ole.IInspectable
}

type iMediaPlaybackSession2Vtbl struct {
	ole.IInspectableVtbl

	AddBufferedRangesChanged            uintptr
	RemoveBufferedRangesChanged         uintptr
	AddPlayedRangesChanged              uintptr
	RemovePlayedRangesChanged           uintptr
	AddSeekableRangesChanged            uintptr
	RemoveSeekableRangesChanged         uintptr
	AddSupportedPlaybackRatesChanged    uintptr
	RemoveSupportedPlaybackRatesChanged uintptr
	GetSphericalVideoProjection         uintptr
	GetIsMirroring                      uintptr
	SetIsMirroring                      uintptr
	GetBufferedRanges                   uintptr
	GetPlayedRanges                     uintptr
	GetSeekableRanges                   uintptr
	IsSupportedPlaybackRateRange        uintptr
}

func (v *iMediaPlaybackSession2) VTable() *iMediaPlaybackSession2Vtbl {
	return (*iMediaPlaybackSession2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaPlaybackSession2) AddBufferedRangesChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBufferedRangesChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) RemoveBufferedRangesChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBufferedRangesChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession2) AddPlayedRangesChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPlayedRangesChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) RemovePlayedRangesChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePlayedRangesChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession2) AddSeekableRangesChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddSeekableRangesChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) RemoveSeekableRangesChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveSeekableRangesChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession2) AddSupportedPlaybackRatesChanged(value *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddSupportedPlaybackRatesChanged,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),  // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) RemoveSupportedPlaybackRatesChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveSupportedPlaybackRatesChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession2) GetSphericalVideoProjection() (*MediaPlaybackSphericalVideoProjection, error) {
	var out *MediaPlaybackSphericalVideoProjection
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetSphericalVideoProjection,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackSphericalVideoProjection
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) GetIsMirroring() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsMirroring,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) SetIsMirroring(value bool) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetIsMirroring,
		uintptr(unsafe.Pointer(v)),                // this
		uintptr(*(*byte)(unsafe.Pointer(&value))), // in bool
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession2) GetBufferedRanges() (*collections.IVectorView, error) {
	var out *collections.IVectorView
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetBufferedRanges,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVectorView
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) GetPlayedRanges() (*collections.IVectorView, error) {
	var out *collections.IVectorView
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPlayedRanges,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVectorView
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) GetSeekableRanges() (*collections.IVectorView, error) {
	var out *collections.IVectorView
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetSeekableRanges,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVectorView
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession2) IsSupportedPlaybackRateRange(rate1 float64, rate2 float64) (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().IsSupportedPlaybackRateRange,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(rate1),                // in float64
		uintptr(rate2),                // in float64
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaPlaybackSession3 string = "7ba2b41a-a3e2-405f-b77b-a4812c238b66"
const SignatureiMediaPlaybackSession3 string = "{7ba2b41a-a3e2-405f-b77b-a4812c238b66}"

type iMediaPlaybackSession3 struct {
	ole.IInspectable
}

type iMediaPlaybackSession3Vtbl struct {
	ole.IInspectableVtbl

	GetPlaybackRotation             uintptr
	SetPlaybackRotation             uintptr
	GetOutputDegradationPolicyState uintptr
}

func (v *iMediaPlaybackSession3) VTable() *iMediaPlaybackSession3Vtbl {
	return (*iMediaPlaybackSession3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaPlaybackSession3) GetPlaybackRotation() (mediaproperties.MediaRotation, error) {
	var out mediaproperties.MediaRotation
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPlaybackRotation,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out mediaproperties.MediaRotation
	)

	if hr != 0 {
		return mediaproperties.MediaRotationNone, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackSession3) SetPlaybackRotation(value mediaproperties.MediaRotation) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetPlaybackRotation,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(value),             // in mediaproperties.MediaRotation
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackSession3) GetOutputDegradationPolicyState() (*MediaPlaybackSessionOutputDegradationPolicyState, error) {
	var out *MediaPlaybackSessionOutputDegradationPolicyState
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetOutputDegradationPolicyState,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackSessionOutputDegradationPolicyState
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
