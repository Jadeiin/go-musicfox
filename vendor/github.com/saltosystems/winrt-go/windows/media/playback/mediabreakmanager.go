// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package playback

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureMediaBreakManager string = "rc(Windows.Media.Playback.MediaBreakManager;{a854ddb1-feb4-4d9b-9d97-0fdbe58e5e39})"

type MediaBreakManager struct {
	ole.IUnknown
}

func (impl *MediaBreakManager) AddBreaksSeekedOver(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.AddBreaksSeekedOver(handler)
}

func (impl *MediaBreakManager) RemoveBreaksSeekedOver(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.RemoveBreaksSeekedOver(token)
}

func (impl *MediaBreakManager) AddBreakStarted(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.AddBreakStarted(handler)
}

func (impl *MediaBreakManager) RemoveBreakStarted(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.RemoveBreakStarted(token)
}

func (impl *MediaBreakManager) AddBreakEnded(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.AddBreakEnded(handler)
}

func (impl *MediaBreakManager) RemoveBreakEnded(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.RemoveBreakEnded(token)
}

func (impl *MediaBreakManager) AddBreakSkipped(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.AddBreakSkipped(handler)
}

func (impl *MediaBreakManager) RemoveBreakSkipped(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.RemoveBreakSkipped(token)
}

func (impl *MediaBreakManager) GetCurrentBreak() (*MediaBreak, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.GetCurrentBreak()
}

func (impl *MediaBreakManager) GetPlaybackSession() (*MediaPlaybackSession, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.GetPlaybackSession()
}

func (impl *MediaBreakManager) PlayBreak(value *MediaBreak) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.PlayBreak(value)
}

func (impl *MediaBreakManager) SkipCurrentBreak() error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBreakManager))
	defer itf.Release()
	v := (*iMediaBreakManager)(unsafe.Pointer(itf))
	return v.SkipCurrentBreak()
}

const GUIDiMediaBreakManager string = "a854ddb1-feb4-4d9b-9d97-0fdbe58e5e39"
const SignatureiMediaBreakManager string = "{a854ddb1-feb4-4d9b-9d97-0fdbe58e5e39}"

type iMediaBreakManager struct {
	ole.IInspectable
}

type iMediaBreakManagerVtbl struct {
	ole.IInspectableVtbl

	AddBreaksSeekedOver    uintptr
	RemoveBreaksSeekedOver uintptr
	AddBreakStarted        uintptr
	RemoveBreakStarted     uintptr
	AddBreakEnded          uintptr
	RemoveBreakEnded       uintptr
	AddBreakSkipped        uintptr
	RemoveBreakSkipped     uintptr
	GetCurrentBreak        uintptr
	GetPlaybackSession     uintptr
	PlayBreak              uintptr
	SkipCurrentBreak       uintptr
}

func (v *iMediaBreakManager) VTable() *iMediaBreakManagerVtbl {
	return (*iMediaBreakManagerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaBreakManager) AddBreaksSeekedOver(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBreaksSeekedOver,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaBreakManager) RemoveBreaksSeekedOver(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBreaksSeekedOver,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaBreakManager) AddBreakStarted(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBreakStarted,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaBreakManager) RemoveBreakStarted(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBreakStarted,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaBreakManager) AddBreakEnded(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBreakEnded,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaBreakManager) RemoveBreakEnded(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBreakEnded,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaBreakManager) AddBreakSkipped(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBreakSkipped,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaBreakManager) RemoveBreakSkipped(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBreakSkipped,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaBreakManager) GetCurrentBreak() (*MediaBreak, error) {
	var out *MediaBreak
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCurrentBreak,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaBreak
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaBreakManager) GetPlaybackSession() (*MediaPlaybackSession, error) {
	var out *MediaPlaybackSession
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPlaybackSession,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackSession
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaBreakManager) PlayBreak(value *MediaBreak) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().PlayBreak,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in MediaBreak
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaBreakManager) SkipCurrentBreak() error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SkipCurrentBreak,
		uintptr(unsafe.Pointer(v)), // this
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}
