// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package playback

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureMediaPlaybackCommandManagerNextReceivedEventArgs string = "rc(Windows.Media.Playback.MediaPlaybackCommandManagerNextReceivedEventArgs;{e1504433-a2b0-45d4-b9de-5f42ac14a839})"

type MediaPlaybackCommandManagerNextReceivedEventArgs struct {
	ole.IUnknown
}

func (impl *MediaPlaybackCommandManagerNextReceivedEventArgs) GetHandled() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManagerNextReceivedEventArgs))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManagerNextReceivedEventArgs)(unsafe.Pointer(itf))
	return v.GetHandled()
}

func (impl *MediaPlaybackCommandManagerNextReceivedEventArgs) SetHandled(value bool) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManagerNextReceivedEventArgs))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManagerNextReceivedEventArgs)(unsafe.Pointer(itf))
	return v.SetHandled(value)
}

func (impl *MediaPlaybackCommandManagerNextReceivedEventArgs) GetDeferral() (*foundation.Deferral, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManagerNextReceivedEventArgs))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManagerNextReceivedEventArgs)(unsafe.Pointer(itf))
	return v.GetDeferral()
}

const GUIDiMediaPlaybackCommandManagerNextReceivedEventArgs string = "e1504433-a2b0-45d4-b9de-5f42ac14a839"
const SignatureiMediaPlaybackCommandManagerNextReceivedEventArgs string = "{e1504433-a2b0-45d4-b9de-5f42ac14a839}"

type iMediaPlaybackCommandManagerNextReceivedEventArgs struct {
	ole.IInspectable
}

type iMediaPlaybackCommandManagerNextReceivedEventArgsVtbl struct {
	ole.IInspectableVtbl

	GetHandled  uintptr
	SetHandled  uintptr
	GetDeferral uintptr
}

func (v *iMediaPlaybackCommandManagerNextReceivedEventArgs) VTable() *iMediaPlaybackCommandManagerNextReceivedEventArgsVtbl {
	return (*iMediaPlaybackCommandManagerNextReceivedEventArgsVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaPlaybackCommandManagerNextReceivedEventArgs) GetHandled() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetHandled,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManagerNextReceivedEventArgs) SetHandled(value bool) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetHandled,
		uintptr(unsafe.Pointer(v)),                // this
		uintptr(*(*byte)(unsafe.Pointer(&value))), // in bool
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManagerNextReceivedEventArgs) GetDeferral() (*foundation.Deferral, error) {
	var out *foundation.Deferral
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDeferral,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.Deferral
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
