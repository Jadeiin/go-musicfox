// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package playback

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureMediaPlaybackCommandManager string = "rc(Windows.Media.Playback.MediaPlaybackCommandManager;{5acee5a6-5cb6-4a5a-8521-cc86b1c1ed37})"

type MediaPlaybackCommandManager struct {
	ole.IUnknown
}

func (impl *MediaPlaybackCommandManager) GetIsEnabled() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetIsEnabled()
}

func (impl *MediaPlaybackCommandManager) SetIsEnabled(value bool) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.SetIsEnabled(value)
}

func (impl *MediaPlaybackCommandManager) GetMediaPlayer() (*MediaPlayer, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetMediaPlayer()
}

func (impl *MediaPlaybackCommandManager) GetPlayBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetPlayBehavior()
}

func (impl *MediaPlaybackCommandManager) GetPauseBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetPauseBehavior()
}

func (impl *MediaPlaybackCommandManager) GetNextBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetNextBehavior()
}

func (impl *MediaPlaybackCommandManager) GetPreviousBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetPreviousBehavior()
}

func (impl *MediaPlaybackCommandManager) GetFastForwardBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetFastForwardBehavior()
}

func (impl *MediaPlaybackCommandManager) GetRewindBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetRewindBehavior()
}

func (impl *MediaPlaybackCommandManager) GetShuffleBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetShuffleBehavior()
}

func (impl *MediaPlaybackCommandManager) GetAutoRepeatModeBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetAutoRepeatModeBehavior()
}

func (impl *MediaPlaybackCommandManager) GetPositionBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetPositionBehavior()
}

func (impl *MediaPlaybackCommandManager) GetRateBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.GetRateBehavior()
}

func (impl *MediaPlaybackCommandManager) AddPlayReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddPlayReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemovePlayReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemovePlayReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddPauseReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddPauseReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemovePauseReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemovePauseReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddNextReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddNextReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemoveNextReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemoveNextReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddPreviousReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddPreviousReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemovePreviousReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemovePreviousReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddFastForwardReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddFastForwardReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemoveFastForwardReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemoveFastForwardReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddRewindReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddRewindReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemoveRewindReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemoveRewindReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddShuffleReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddShuffleReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemoveShuffleReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemoveShuffleReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddAutoRepeatModeReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddAutoRepeatModeReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemoveAutoRepeatModeReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemoveAutoRepeatModeReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddPositionReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddPositionReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemovePositionReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemovePositionReceived(token)
}

func (impl *MediaPlaybackCommandManager) AddRateReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.AddRateReceived(handler)
}

func (impl *MediaPlaybackCommandManager) RemoveRateReceived(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlaybackCommandManager))
	defer itf.Release()
	v := (*iMediaPlaybackCommandManager)(unsafe.Pointer(itf))
	return v.RemoveRateReceived(token)
}

const GUIDiMediaPlaybackCommandManager string = "5acee5a6-5cb6-4a5a-8521-cc86b1c1ed37"
const SignatureiMediaPlaybackCommandManager string = "{5acee5a6-5cb6-4a5a-8521-cc86b1c1ed37}"

type iMediaPlaybackCommandManager struct {
	ole.IInspectable
}

type iMediaPlaybackCommandManagerVtbl struct {
	ole.IInspectableVtbl

	GetIsEnabled                 uintptr
	SetIsEnabled                 uintptr
	GetMediaPlayer               uintptr
	GetPlayBehavior              uintptr
	GetPauseBehavior             uintptr
	GetNextBehavior              uintptr
	GetPreviousBehavior          uintptr
	GetFastForwardBehavior       uintptr
	GetRewindBehavior            uintptr
	GetShuffleBehavior           uintptr
	GetAutoRepeatModeBehavior    uintptr
	GetPositionBehavior          uintptr
	GetRateBehavior              uintptr
	AddPlayReceived              uintptr
	RemovePlayReceived           uintptr
	AddPauseReceived             uintptr
	RemovePauseReceived          uintptr
	AddNextReceived              uintptr
	RemoveNextReceived           uintptr
	AddPreviousReceived          uintptr
	RemovePreviousReceived       uintptr
	AddFastForwardReceived       uintptr
	RemoveFastForwardReceived    uintptr
	AddRewindReceived            uintptr
	RemoveRewindReceived         uintptr
	AddShuffleReceived           uintptr
	RemoveShuffleReceived        uintptr
	AddAutoRepeatModeReceived    uintptr
	RemoveAutoRepeatModeReceived uintptr
	AddPositionReceived          uintptr
	RemovePositionReceived       uintptr
	AddRateReceived              uintptr
	RemoveRateReceived           uintptr
}

func (v *iMediaPlaybackCommandManager) VTable() *iMediaPlaybackCommandManagerVtbl {
	return (*iMediaPlaybackCommandManagerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaPlaybackCommandManager) GetIsEnabled() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsEnabled,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) SetIsEnabled(value bool) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetIsEnabled,
		uintptr(unsafe.Pointer(v)),                // this
		uintptr(*(*byte)(unsafe.Pointer(&value))), // in bool
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) GetMediaPlayer() (*MediaPlayer, error) {
	var out *MediaPlayer
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMediaPlayer,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlayer
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetPlayBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPlayBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetPauseBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPauseBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetNextBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetNextBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetPreviousBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPreviousBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetFastForwardBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetFastForwardBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetRewindBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetRewindBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetShuffleBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetShuffleBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetAutoRepeatModeBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAutoRepeatModeBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetPositionBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPositionBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) GetRateBehavior() (*MediaPlaybackCommandManagerCommandBehavior, error) {
	var out *MediaPlaybackCommandManagerCommandBehavior
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetRateBehavior,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlaybackCommandManagerCommandBehavior
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) AddPlayReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPlayReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemovePlayReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePlayReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddPauseReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPauseReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemovePauseReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePauseReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddNextReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddNextReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemoveNextReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveNextReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddPreviousReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPreviousReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemovePreviousReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePreviousReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddFastForwardReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddFastForwardReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemoveFastForwardReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveFastForwardReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddRewindReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddRewindReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemoveRewindReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveRewindReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddShuffleReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddShuffleReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemoveShuffleReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveShuffleReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddAutoRepeatModeReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddAutoRepeatModeReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemoveAutoRepeatModeReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveAutoRepeatModeReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddPositionReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPositionReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemovePositionReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePositionReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaPlaybackCommandManager) AddRateReceived(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddRateReceived,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlaybackCommandManager) RemoveRateReceived(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveRateReceived,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}
