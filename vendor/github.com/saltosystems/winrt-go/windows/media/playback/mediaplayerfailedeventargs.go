// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package playback

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureMediaPlayerFailedEventArgs string = "rc(Windows.Media.Playback.MediaPlayerFailedEventArgs;{2744e9b9-a7e3-4f16-bac4-7914ebc08301})"

type MediaPlayerFailedEventArgs struct {
	ole.IUnknown
}

func (impl *MediaPlayerFailedEventArgs) GetError() (MediaPlayerError, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlayerFailedEventArgs))
	defer itf.Release()
	v := (*iMediaPlayerFailedEventArgs)(unsafe.Pointer(itf))
	return v.GetError()
}

func (impl *MediaPlayerFailedEventArgs) GetExtendedErrorCode() (foundation.HResult, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlayerFailedEventArgs))
	defer itf.Release()
	v := (*iMediaPlayerFailedEventArgs)(unsafe.Pointer(itf))
	return v.GetExtendedErrorCode()
}

func (impl *MediaPlayerFailedEventArgs) GetErrorMessage() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaPlayerFailedEventArgs))
	defer itf.Release()
	v := (*iMediaPlayerFailedEventArgs)(unsafe.Pointer(itf))
	return v.GetErrorMessage()
}

const GUIDiMediaPlayerFailedEventArgs string = "2744e9b9-a7e3-4f16-bac4-7914ebc08301"
const SignatureiMediaPlayerFailedEventArgs string = "{2744e9b9-a7e3-4f16-bac4-7914ebc08301}"

type iMediaPlayerFailedEventArgs struct {
	ole.IInspectable
}

type iMediaPlayerFailedEventArgsVtbl struct {
	ole.IInspectableVtbl

	GetError             uintptr
	GetExtendedErrorCode uintptr
	GetErrorMessage      uintptr
}

func (v *iMediaPlayerFailedEventArgs) VTable() *iMediaPlayerFailedEventArgsVtbl {
	return (*iMediaPlayerFailedEventArgsVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaPlayerFailedEventArgs) GetError() (MediaPlayerError, error) {
	var out MediaPlayerError
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetError,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaPlayerError
	)

	if hr != 0 {
		return MediaPlayerErrorUnknown, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlayerFailedEventArgs) GetExtendedErrorCode() (foundation.HResult, error) {
	var out foundation.HResult
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetExtendedErrorCode,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.HResult
	)

	if hr != 0 {
		return foundation.HResult{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaPlayerFailedEventArgs) GetErrorMessage() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetErrorMessage,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}
