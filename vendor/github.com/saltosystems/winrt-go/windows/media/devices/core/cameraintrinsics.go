// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package core

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/numerics"
)

const SignatureCameraIntrinsics string = "rc(Windows.Media.Devices.Core.CameraIntrinsics;{0aa6ed32-6589-49da-afde-594270ca0aac})"

type CameraIntrinsics struct {
	ole.IUnknown
}

func (impl *CameraIntrinsics) GetFocalLength() (numerics.Vector2, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.GetFocalLength()
}

func (impl *CameraIntrinsics) GetPrincipalPoint() (numerics.Vector2, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.GetPrincipalPoint()
}

func (impl *CameraIntrinsics) GetRadialDistortion() (numerics.Vector3, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.GetRadialDistortion()
}

func (impl *CameraIntrinsics) GetTangentialDistortion() (numerics.Vector2, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.GetTangentialDistortion()
}

func (impl *CameraIntrinsics) GetImageWidth() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.GetImageWidth()
}

func (impl *CameraIntrinsics) GetImageHeight() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.GetImageHeight()
}

func (impl *CameraIntrinsics) ProjectOntoFrame(coordinate numerics.Vector3) (foundation.Point, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.ProjectOntoFrame(coordinate)
}

func (impl *CameraIntrinsics) UnprojectAtUnitDepth(pixelCoordinate foundation.Point) (numerics.Vector2, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.UnprojectAtUnitDepth(pixelCoordinate)
}

func (impl *CameraIntrinsics) ProjectManyOntoFrame(coordinatesSize uint32, coordinates []numerics.Vector3, resultsSize uint32) ([]foundation.Point, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.ProjectManyOntoFrame(coordinatesSize, coordinates, resultsSize)
}

func (impl *CameraIntrinsics) UnprojectPixelsAtUnitDepth(pixelCoordinatesSize uint32, pixelCoordinates []foundation.Point, resultsSize uint32) ([]numerics.Vector2, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics))
	defer itf.Release()
	v := (*iCameraIntrinsics)(unsafe.Pointer(itf))
	return v.UnprojectPixelsAtUnitDepth(pixelCoordinatesSize, pixelCoordinates, resultsSize)
}

func (impl *CameraIntrinsics) GetUndistortedProjectionTransform() (numerics.Matrix4x4, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics2))
	defer itf.Release()
	v := (*iCameraIntrinsics2)(unsafe.Pointer(itf))
	return v.GetUndistortedProjectionTransform()
}

func (impl *CameraIntrinsics) DistortPoint(input foundation.Point) (foundation.Point, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics2))
	defer itf.Release()
	v := (*iCameraIntrinsics2)(unsafe.Pointer(itf))
	return v.DistortPoint(input)
}

func (impl *CameraIntrinsics) DistortPoints(inputsSize uint32, inputs []foundation.Point, resultsSize uint32) ([]foundation.Point, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics2))
	defer itf.Release()
	v := (*iCameraIntrinsics2)(unsafe.Pointer(itf))
	return v.DistortPoints(inputsSize, inputs, resultsSize)
}

func (impl *CameraIntrinsics) UndistortPoint(input foundation.Point) (foundation.Point, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics2))
	defer itf.Release()
	v := (*iCameraIntrinsics2)(unsafe.Pointer(itf))
	return v.UndistortPoint(input)
}

func (impl *CameraIntrinsics) UndistortPoints(inputsSize uint32, inputs []foundation.Point, resultsSize uint32) ([]foundation.Point, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiCameraIntrinsics2))
	defer itf.Release()
	v := (*iCameraIntrinsics2)(unsafe.Pointer(itf))
	return v.UndistortPoints(inputsSize, inputs, resultsSize)
}

const GUIDiCameraIntrinsics string = "0aa6ed32-6589-49da-afde-594270ca0aac"
const SignatureiCameraIntrinsics string = "{0aa6ed32-6589-49da-afde-594270ca0aac}"

type iCameraIntrinsics struct {
	ole.IInspectable
}

type iCameraIntrinsicsVtbl struct {
	ole.IInspectableVtbl

	GetFocalLength             uintptr
	GetPrincipalPoint          uintptr
	GetRadialDistortion        uintptr
	GetTangentialDistortion    uintptr
	GetImageWidth              uintptr
	GetImageHeight             uintptr
	ProjectOntoFrame           uintptr
	UnprojectAtUnitDepth       uintptr
	ProjectManyOntoFrame       uintptr
	UnprojectPixelsAtUnitDepth uintptr
}

func (v *iCameraIntrinsics) VTable() *iCameraIntrinsicsVtbl {
	return (*iCameraIntrinsicsVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iCameraIntrinsics) GetFocalLength() (numerics.Vector2, error) {
	var out numerics.Vector2
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetFocalLength,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out numerics.Vector2
	)

	if hr != 0 {
		return numerics.Vector2{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics) GetPrincipalPoint() (numerics.Vector2, error) {
	var out numerics.Vector2
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPrincipalPoint,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out numerics.Vector2
	)

	if hr != 0 {
		return numerics.Vector2{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics) GetRadialDistortion() (numerics.Vector3, error) {
	var out numerics.Vector3
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetRadialDistortion,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out numerics.Vector3
	)

	if hr != 0 {
		return numerics.Vector3{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics) GetTangentialDistortion() (numerics.Vector2, error) {
	var out numerics.Vector2
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetTangentialDistortion,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out numerics.Vector2
	)

	if hr != 0 {
		return numerics.Vector2{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics) GetImageWidth() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetImageWidth,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics) GetImageHeight() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetImageHeight,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics) ProjectOntoFrame(coordinate numerics.Vector3) (foundation.Point, error) {
	var out foundation.Point
	hr, _, _ := syscall.SyscallN(
		v.VTable().ProjectOntoFrame,
		uintptr(unsafe.Pointer(v)),           // this
		uintptr(unsafe.Pointer(&coordinate)), // in numerics.Vector3
		uintptr(unsafe.Pointer(&out)),        // out foundation.Point
	)

	if hr != 0 {
		return foundation.Point{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics) UnprojectAtUnitDepth(pixelCoordinate foundation.Point) (numerics.Vector2, error) {
	var out numerics.Vector2
	hr, _, _ := syscall.SyscallN(
		v.VTable().UnprojectAtUnitDepth,
		uintptr(unsafe.Pointer(v)),                // this
		uintptr(unsafe.Pointer(&pixelCoordinate)), // in foundation.Point
		uintptr(unsafe.Pointer(&out)),             // out numerics.Vector2
	)

	if hr != 0 {
		return numerics.Vector2{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics) ProjectManyOntoFrame(coordinatesSize uint32, coordinates []numerics.Vector3, resultsSize uint32) ([]foundation.Point, error) {
	var results []foundation.Point = make([]foundation.Point, resultsSize)
	hr, _, _ := syscall.SyscallN(
		v.VTable().ProjectManyOntoFrame,
		uintptr(unsafe.Pointer(v)),               // this
		uintptr(coordinatesSize),                 // in uint32
		uintptr(unsafe.Pointer(&coordinates[0])), // in numerics.Vector3
		uintptr(resultsSize),                     // in uint32
		uintptr(unsafe.Pointer(&results[0])),     // out foundation.Point
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return results, nil
}

func (v *iCameraIntrinsics) UnprojectPixelsAtUnitDepth(pixelCoordinatesSize uint32, pixelCoordinates []foundation.Point, resultsSize uint32) ([]numerics.Vector2, error) {
	var results []numerics.Vector2 = make([]numerics.Vector2, resultsSize)
	hr, _, _ := syscall.SyscallN(
		v.VTable().UnprojectPixelsAtUnitDepth,
		uintptr(unsafe.Pointer(v)),                    // this
		uintptr(pixelCoordinatesSize),                 // in uint32
		uintptr(unsafe.Pointer(&pixelCoordinates[0])), // in foundation.Point
		uintptr(resultsSize),                          // in uint32
		uintptr(unsafe.Pointer(&results[0])),          // out numerics.Vector2
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return results, nil
}

const GUIDiCameraIntrinsics2 string = "0cdaa447-0798-4b4d-839f-c5ec414db27a"
const SignatureiCameraIntrinsics2 string = "{0cdaa447-0798-4b4d-839f-c5ec414db27a}"

type iCameraIntrinsics2 struct {
	ole.IInspectable
}

type iCameraIntrinsics2Vtbl struct {
	ole.IInspectableVtbl

	GetUndistortedProjectionTransform uintptr
	DistortPoint                      uintptr
	DistortPoints                     uintptr
	UndistortPoint                    uintptr
	UndistortPoints                   uintptr
}

func (v *iCameraIntrinsics2) VTable() *iCameraIntrinsics2Vtbl {
	return (*iCameraIntrinsics2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iCameraIntrinsics2) GetUndistortedProjectionTransform() (numerics.Matrix4x4, error) {
	var out numerics.Matrix4x4
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetUndistortedProjectionTransform,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out numerics.Matrix4x4
	)

	if hr != 0 {
		return numerics.Matrix4x4{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics2) DistortPoint(input foundation.Point) (foundation.Point, error) {
	var out foundation.Point
	hr, _, _ := syscall.SyscallN(
		v.VTable().DistortPoint,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&input)), // in foundation.Point
		uintptr(unsafe.Pointer(&out)),   // out foundation.Point
	)

	if hr != 0 {
		return foundation.Point{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics2) DistortPoints(inputsSize uint32, inputs []foundation.Point, resultsSize uint32) ([]foundation.Point, error) {
	var results []foundation.Point = make([]foundation.Point, resultsSize)
	hr, _, _ := syscall.SyscallN(
		v.VTable().DistortPoints,
		uintptr(unsafe.Pointer(v)),           // this
		uintptr(inputsSize),                  // in uint32
		uintptr(unsafe.Pointer(&inputs[0])),  // in foundation.Point
		uintptr(resultsSize),                 // in uint32
		uintptr(unsafe.Pointer(&results[0])), // out foundation.Point
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return results, nil
}

func (v *iCameraIntrinsics2) UndistortPoint(input foundation.Point) (foundation.Point, error) {
	var out foundation.Point
	hr, _, _ := syscall.SyscallN(
		v.VTable().UndistortPoint,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&input)), // in foundation.Point
		uintptr(unsafe.Pointer(&out)),   // out foundation.Point
	)

	if hr != 0 {
		return foundation.Point{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iCameraIntrinsics2) UndistortPoints(inputsSize uint32, inputs []foundation.Point, resultsSize uint32) ([]foundation.Point, error) {
	var results []foundation.Point = make([]foundation.Point, resultsSize)
	hr, _, _ := syscall.SyscallN(
		v.VTable().UndistortPoints,
		uintptr(unsafe.Pointer(v)),           // this
		uintptr(inputsSize),                  // in uint32
		uintptr(unsafe.Pointer(&inputs[0])),  // in foundation.Point
		uintptr(resultsSize),                 // in uint32
		uintptr(unsafe.Pointer(&results[0])), // out foundation.Point
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return results, nil
}

const GUIDiCameraIntrinsicsFactory string = "c0ddc486-2132-4a34-a659-9bfe2a055712"
const SignatureiCameraIntrinsicsFactory string = "{c0ddc486-2132-4a34-a659-9bfe2a055712}"

type iCameraIntrinsicsFactory struct {
	ole.IInspectable
}

type iCameraIntrinsicsFactoryVtbl struct {
	ole.IInspectableVtbl

	CameraIntrinsicsCreate uintptr
}

func (v *iCameraIntrinsicsFactory) VTable() *iCameraIntrinsicsFactoryVtbl {
	return (*iCameraIntrinsicsFactoryVtbl)(unsafe.Pointer(v.RawVTable))
}

func CameraIntrinsicsCreate(focalLength numerics.Vector2, principalPoint numerics.Vector2, radialDistortion numerics.Vector3, tangentialDistortion numerics.Vector2, imageWidth uint32, imageHeight uint32) (*CameraIntrinsics, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Devices.Core.CameraIntrinsics", ole.NewGUID(GUIDiCameraIntrinsicsFactory))
	if err != nil {
		return nil, err
	}
	v := (*iCameraIntrinsicsFactory)(unsafe.Pointer(inspectable))

	var out *CameraIntrinsics
	hr, _, _ := syscall.SyscallN(
		v.VTable().CameraIntrinsicsCreate,
		0,                                        // this is a static func, so there's no this
		uintptr(unsafe.Pointer(&focalLength)),    // in numerics.Vector2
		uintptr(unsafe.Pointer(&principalPoint)), // in numerics.Vector2
		uintptr(unsafe.Pointer(&radialDistortion)),     // in numerics.Vector3
		uintptr(unsafe.Pointer(&tangentialDistortion)), // in numerics.Vector2
		uintptr(imageWidth),                            // in uint32
		uintptr(imageHeight),                           // in uint32
		uintptr(unsafe.Pointer(&out)),                  // out CameraIntrinsics
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
