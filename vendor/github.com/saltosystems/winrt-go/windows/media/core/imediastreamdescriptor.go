// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package core

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
)

const GUIDIMediaStreamDescriptor string = "80f16e6e-92f7-451e-97d2-afd80742da70"
const SignatureIMediaStreamDescriptor string = "{80f16e6e-92f7-451e-97d2-afd80742da70}"

type IMediaStreamDescriptor struct {
	ole.IInspectable
}

type IMediaStreamDescriptorVtbl struct {
	ole.IInspectableVtbl

	GetIsSelected uintptr
	SetName       uintptr
	GetName       uintptr
	SetLanguage   uintptr
	GetLanguage   uintptr
}

func (v *IMediaStreamDescriptor) VTable() *IMediaStreamDescriptorVtbl {
	return (*IMediaStreamDescriptorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IMediaStreamDescriptor) GetIsSelected() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsSelected,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *IMediaStreamDescriptor) SetName(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetName,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *IMediaStreamDescriptor) GetName() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetName,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *IMediaStreamDescriptor) SetLanguage(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetLanguage,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *IMediaStreamDescriptor) GetLanguage() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetLanguage,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}
