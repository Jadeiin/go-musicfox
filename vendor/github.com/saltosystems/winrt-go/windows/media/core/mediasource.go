// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package core

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/collections"
	"github.com/saltosystems/winrt-go/windows/media/capture/frames"
	"github.com/saltosystems/winrt-go/windows/media/streaming/adaptive"
	"github.com/saltosystems/winrt-go/windows/networking/backgroundtransfer"
	"github.com/saltosystems/winrt-go/windows/storage"
	"github.com/saltosystems/winrt-go/windows/storage/streams"
)

const SignatureMediaSource string = "rc(Windows.Media.Core.MediaSource;{2eb61048-655f-4c37-b813-b4e45dfa0abe})"

type MediaSource struct {
	ole.IUnknown
}

func (impl *MediaSource) AddOpenOperationCompleted(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource2))
	defer itf.Release()
	v := (*iMediaSource2)(unsafe.Pointer(itf))
	return v.AddOpenOperationCompleted(handler)
}

func (impl *MediaSource) RemoveOpenOperationCompleted(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource2))
	defer itf.Release()
	v := (*iMediaSource2)(unsafe.Pointer(itf))
	return v.RemoveOpenOperationCompleted(token)
}

func (impl *MediaSource) GetCustomProperties() (*collections.ValueSet, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource2))
	defer itf.Release()
	v := (*iMediaSource2)(unsafe.Pointer(itf))
	return v.GetCustomProperties()
}

func (impl *MediaSource) GetDuration() (*foundation.IReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource2))
	defer itf.Release()
	v := (*iMediaSource2)(unsafe.Pointer(itf))
	return v.GetDuration()
}

func (impl *MediaSource) GetIsOpen() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource2))
	defer itf.Release()
	v := (*iMediaSource2)(unsafe.Pointer(itf))
	return v.GetIsOpen()
}

func (impl *MediaSource) GetExternalTimedTextSources() (*collections.IObservableVector, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource2))
	defer itf.Release()
	v := (*iMediaSource2)(unsafe.Pointer(itf))
	return v.GetExternalTimedTextSources()
}

func (impl *MediaSource) GetExternalTimedMetadataTracks() (*collections.IObservableVector, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource2))
	defer itf.Release()
	v := (*iMediaSource2)(unsafe.Pointer(itf))
	return v.GetExternalTimedMetadataTracks()
}

func (impl *MediaSource) Close() error {
	itf := impl.MustQueryInterface(ole.NewGUID(foundation.GUIDIClosable))
	defer itf.Release()
	v := (*foundation.IClosable)(unsafe.Pointer(itf))
	return v.Close()
}

func (impl *MediaSource) AddStateChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource3))
	defer itf.Release()
	v := (*iMediaSource3)(unsafe.Pointer(itf))
	return v.AddStateChanged(handler)
}

func (impl *MediaSource) RemoveStateChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource3))
	defer itf.Release()
	v := (*iMediaSource3)(unsafe.Pointer(itf))
	return v.RemoveStateChanged(token)
}

func (impl *MediaSource) GetState() (MediaSourceState, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource3))
	defer itf.Release()
	v := (*iMediaSource3)(unsafe.Pointer(itf))
	return v.GetState()
}

func (impl *MediaSource) Reset() error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource3))
	defer itf.Release()
	v := (*iMediaSource3)(unsafe.Pointer(itf))
	return v.Reset()
}

func (impl *MediaSource) GetAdaptiveMediaSource() (*adaptive.AdaptiveMediaSource, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource4))
	defer itf.Release()
	v := (*iMediaSource4)(unsafe.Pointer(itf))
	return v.GetAdaptiveMediaSource()
}

func (impl *MediaSource) GetMediaStreamSource() (*MediaStreamSource, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource4))
	defer itf.Release()
	v := (*iMediaSource4)(unsafe.Pointer(itf))
	return v.GetMediaStreamSource()
}

func (impl *MediaSource) GetMseStreamSource() (*MseStreamSource, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource4))
	defer itf.Release()
	v := (*iMediaSource4)(unsafe.Pointer(itf))
	return v.GetMseStreamSource()
}

func (impl *MediaSource) GetUri() (*foundation.Uri, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource4))
	defer itf.Release()
	v := (*iMediaSource4)(unsafe.Pointer(itf))
	return v.GetUri()
}

func (impl *MediaSource) OpenAsync() (*foundation.IAsyncAction, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource4))
	defer itf.Release()
	v := (*iMediaSource4)(unsafe.Pointer(itf))
	return v.OpenAsync()
}

func (impl *MediaSource) GetDownloadOperation() (*backgroundtransfer.DownloadOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaSource5))
	defer itf.Release()
	v := (*iMediaSource5)(unsafe.Pointer(itf))
	return v.GetDownloadOperation()
}

const GUIDiMediaSource2 string = "2eb61048-655f-4c37-b813-b4e45dfa0abe"
const SignatureiMediaSource2 string = "{2eb61048-655f-4c37-b813-b4e45dfa0abe}"

type iMediaSource2 struct {
	ole.IInspectable
}

type iMediaSource2Vtbl struct {
	ole.IInspectableVtbl

	AddOpenOperationCompleted      uintptr
	RemoveOpenOperationCompleted   uintptr
	GetCustomProperties            uintptr
	GetDuration                    uintptr
	GetIsOpen                      uintptr
	GetExternalTimedTextSources    uintptr
	GetExternalTimedMetadataTracks uintptr
}

func (v *iMediaSource2) VTable() *iMediaSource2Vtbl {
	return (*iMediaSource2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaSource2) AddOpenOperationCompleted(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddOpenOperationCompleted,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource2) RemoveOpenOperationCompleted(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveOpenOperationCompleted,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaSource2) GetCustomProperties() (*collections.ValueSet, error) {
	var out *collections.ValueSet
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCustomProperties,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.ValueSet
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource2) GetDuration() (*foundation.IReference, error) {
	var out *foundation.IReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDuration,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource2) GetIsOpen() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsOpen,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource2) GetExternalTimedTextSources() (*collections.IObservableVector, error) {
	var out *collections.IObservableVector
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetExternalTimedTextSources,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IObservableVector
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource2) GetExternalTimedMetadataTracks() (*collections.IObservableVector, error) {
	var out *collections.IObservableVector
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetExternalTimedMetadataTracks,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IObservableVector
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaSource3 string = "b59f0d9b-4b6e-41ed-bbb4-7c7509a994ad"
const SignatureiMediaSource3 string = "{b59f0d9b-4b6e-41ed-bbb4-7c7509a994ad}"

type iMediaSource3 struct {
	ole.IInspectable
}

type iMediaSource3Vtbl struct {
	ole.IInspectableVtbl

	AddStateChanged    uintptr
	RemoveStateChanged uintptr
	GetState           uintptr
	Reset              uintptr
}

func (v *iMediaSource3) VTable() *iMediaSource3Vtbl {
	return (*iMediaSource3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaSource3) AddStateChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddStateChanged,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource3) RemoveStateChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveStateChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaSource3) GetState() (MediaSourceState, error) {
	var out MediaSourceState
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetState,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaSourceState
	)

	if hr != 0 {
		return MediaSourceStateInitial, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource3) Reset() error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().Reset,
		uintptr(unsafe.Pointer(v)), // this
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiMediaSource4 string = "bdafad57-8eff-4c63-85a6-84de0ae3e4f2"
const SignatureiMediaSource4 string = "{bdafad57-8eff-4c63-85a6-84de0ae3e4f2}"

type iMediaSource4 struct {
	ole.IInspectable
}

type iMediaSource4Vtbl struct {
	ole.IInspectableVtbl

	GetAdaptiveMediaSource uintptr
	GetMediaStreamSource   uintptr
	GetMseStreamSource     uintptr
	GetUri                 uintptr
	OpenAsync              uintptr
}

func (v *iMediaSource4) VTable() *iMediaSource4Vtbl {
	return (*iMediaSource4Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaSource4) GetAdaptiveMediaSource() (*adaptive.AdaptiveMediaSource, error) {
	var out *adaptive.AdaptiveMediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAdaptiveMediaSource,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out adaptive.AdaptiveMediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource4) GetMediaStreamSource() (*MediaStreamSource, error) {
	var out *MediaStreamSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMediaStreamSource,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaStreamSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource4) GetMseStreamSource() (*MseStreamSource, error) {
	var out *MseStreamSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMseStreamSource,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MseStreamSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource4) GetUri() (*foundation.Uri, error) {
	var out *foundation.Uri
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetUri,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.Uri
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaSource4) OpenAsync() (*foundation.IAsyncAction, error) {
	var out *foundation.IAsyncAction
	hr, _, _ := syscall.SyscallN(
		v.VTable().OpenAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncAction
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaSource5 string = "331a22ae-ed2e-4a22-94c8-b743a92b3022"
const SignatureiMediaSource5 string = "{331a22ae-ed2e-4a22-94c8-b743a92b3022}"

type iMediaSource5 struct {
	ole.IInspectable
}

type iMediaSource5Vtbl struct {
	ole.IInspectableVtbl

	GetDownloadOperation uintptr
}

func (v *iMediaSource5) VTable() *iMediaSource5Vtbl {
	return (*iMediaSource5Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaSource5) GetDownloadOperation() (*backgroundtransfer.DownloadOperation, error) {
	var out *backgroundtransfer.DownloadOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDownloadOperation,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out backgroundtransfer.DownloadOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaSourceStatics2 string = "eee161a4-7f13-4896-b8cb-df0de5bcb9f1"
const SignatureiMediaSourceStatics2 string = "{eee161a4-7f13-4896-b8cb-df0de5bcb9f1}"

type iMediaSourceStatics2 struct {
	ole.IInspectable
}

type iMediaSourceStatics2Vtbl struct {
	ole.IInspectableVtbl

	MediaSourceCreateFromMediaBinder uintptr
}

func (v *iMediaSourceStatics2) VTable() *iMediaSourceStatics2Vtbl {
	return (*iMediaSourceStatics2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func MediaSourceCreateFromMediaBinder(binder *MediaBinder) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics2))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics2)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromMediaBinder,
		0,                               // this is a static func, so there's no this
		uintptr(unsafe.Pointer(binder)), // in MediaBinder
		uintptr(unsafe.Pointer(&out)),   // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaSourceStatics4 string = "281b3bfc-e50a-4428-a500-9c4ed918d3f0"
const SignatureiMediaSourceStatics4 string = "{281b3bfc-e50a-4428-a500-9c4ed918d3f0}"

type iMediaSourceStatics4 struct {
	ole.IInspectable
}

type iMediaSourceStatics4Vtbl struct {
	ole.IInspectableVtbl

	MediaSourceCreateFromDownloadOperation uintptr
}

func (v *iMediaSourceStatics4) VTable() *iMediaSourceStatics4Vtbl {
	return (*iMediaSourceStatics4Vtbl)(unsafe.Pointer(v.RawVTable))
}

func MediaSourceCreateFromDownloadOperation(downloadOperation *backgroundtransfer.DownloadOperation) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics4))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics4)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromDownloadOperation,
		0, // this is a static func, so there's no this
		uintptr(unsafe.Pointer(downloadOperation)), // in backgroundtransfer.DownloadOperation
		uintptr(unsafe.Pointer(&out)),              // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaSourceStatics3 string = "453a30d6-2bea-4122-9f73-eace04526e35"
const SignatureiMediaSourceStatics3 string = "{453a30d6-2bea-4122-9f73-eace04526e35}"

type iMediaSourceStatics3 struct {
	ole.IInspectable
}

type iMediaSourceStatics3Vtbl struct {
	ole.IInspectableVtbl

	MediaSourceCreateFromMediaFrameSource uintptr
}

func (v *iMediaSourceStatics3) VTable() *iMediaSourceStatics3Vtbl {
	return (*iMediaSourceStatics3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func MediaSourceCreateFromMediaFrameSource(frameSource *frames.MediaFrameSource) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics3))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics3)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromMediaFrameSource,
		0,                                    // this is a static func, so there's no this
		uintptr(unsafe.Pointer(frameSource)), // in frames.MediaFrameSource
		uintptr(unsafe.Pointer(&out)),        // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaSourceStatics string = "f77d6fa4-4652-410e-b1d8-e9a5e245a45c"
const SignatureiMediaSourceStatics string = "{f77d6fa4-4652-410e-b1d8-e9a5e245a45c}"

type iMediaSourceStatics struct {
	ole.IInspectable
}

type iMediaSourceStaticsVtbl struct {
	ole.IInspectableVtbl

	MediaSourceCreateFromAdaptiveMediaSource uintptr
	MediaSourceCreateFromMediaStreamSource   uintptr
	MediaSourceCreateFromMseStreamSource     uintptr
	MediaSourceCreateFromIMediaSource        uintptr
	MediaSourceCreateFromStorageFile         uintptr
	MediaSourceCreateFromStream              uintptr
	MediaSourceCreateFromStreamReference     uintptr
	MediaSourceCreateFromUri                 uintptr
}

func (v *iMediaSourceStatics) VTable() *iMediaSourceStaticsVtbl {
	return (*iMediaSourceStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func MediaSourceCreateFromAdaptiveMediaSource(mediaSource *adaptive.AdaptiveMediaSource) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromAdaptiveMediaSource,
		0,                                    // this is a static func, so there's no this
		uintptr(unsafe.Pointer(mediaSource)), // in adaptive.AdaptiveMediaSource
		uintptr(unsafe.Pointer(&out)),        // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func MediaSourceCreateFromMediaStreamSource(mediaSource *MediaStreamSource) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromMediaStreamSource,
		0,                                    // this is a static func, so there's no this
		uintptr(unsafe.Pointer(mediaSource)), // in MediaStreamSource
		uintptr(unsafe.Pointer(&out)),        // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func MediaSourceCreateFromMseStreamSource(mediaSource *MseStreamSource) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromMseStreamSource,
		0,                                    // this is a static func, so there's no this
		uintptr(unsafe.Pointer(mediaSource)), // in MseStreamSource
		uintptr(unsafe.Pointer(&out)),        // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func MediaSourceCreateFromIMediaSource(mediaSource *IMediaSource) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromIMediaSource,
		0,                                    // this is a static func, so there's no this
		uintptr(unsafe.Pointer(mediaSource)), // in IMediaSource
		uintptr(unsafe.Pointer(&out)),        // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func MediaSourceCreateFromStorageFile(file *storage.IStorageFile) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromStorageFile,
		0,                             // this is a static func, so there's no this
		uintptr(unsafe.Pointer(file)), // in storage.IStorageFile
		uintptr(unsafe.Pointer(&out)), // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func MediaSourceCreateFromStream(stream *streams.IRandomAccessStream, contentType string) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *MediaSource
	contentTypeHStr, err := ole.NewHString(contentType)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromStream,
		0,                               // this is a static func, so there's no this
		uintptr(unsafe.Pointer(stream)), // in streams.IRandomAccessStream
		uintptr(contentTypeHStr),        // in string
		uintptr(unsafe.Pointer(&out)),   // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func MediaSourceCreateFromStreamReference(stream *streams.IRandomAccessStreamReference, contentType string) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *MediaSource
	contentTypeHStr, err := ole.NewHString(contentType)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromStreamReference,
		0,                               // this is a static func, so there's no this
		uintptr(unsafe.Pointer(stream)), // in streams.IRandomAccessStreamReference
		uintptr(contentTypeHStr),        // in string
		uintptr(unsafe.Pointer(&out)),   // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func MediaSourceCreateFromUri(uri *foundation.Uri) (*MediaSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaSource", ole.NewGUID(GUIDiMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaSourceCreateFromUri,
		0,                             // this is a static func, so there's no this
		uintptr(unsafe.Pointer(uri)),  // in foundation.Uri
		uintptr(unsafe.Pointer(&out)), // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
