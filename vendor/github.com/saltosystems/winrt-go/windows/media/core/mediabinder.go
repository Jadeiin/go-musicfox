// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package core

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureMediaBinder string = "rc(Windows.Media.Core.MediaBinder;{2b7e40aa-de07-424f-83f1-f1de46c4fa2e})"

type MediaBinder struct {
	ole.IUnknown
}

func NewMediaBinder() (*MediaBinder, error) {
	inspectable, err := ole.RoActivateInstance("Windows.Media.Core.MediaBinder")
	if err != nil {
		return nil, err
	}
	return (*MediaBinder)(unsafe.Pointer(inspectable)), nil
}

func (impl *MediaBinder) AddBinding(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBinder))
	defer itf.Release()
	v := (*iMediaBinder)(unsafe.Pointer(itf))
	return v.AddBinding(handler)
}

func (impl *MediaBinder) RemoveBinding(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBinder))
	defer itf.Release()
	v := (*iMediaBinder)(unsafe.Pointer(itf))
	return v.RemoveBinding(token)
}

func (impl *MediaBinder) GetToken() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBinder))
	defer itf.Release()
	v := (*iMediaBinder)(unsafe.Pointer(itf))
	return v.GetToken()
}

func (impl *MediaBinder) SetToken(value string) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBinder))
	defer itf.Release()
	v := (*iMediaBinder)(unsafe.Pointer(itf))
	return v.SetToken(value)
}

func (impl *MediaBinder) GetSource() (*MediaSource, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaBinder))
	defer itf.Release()
	v := (*iMediaBinder)(unsafe.Pointer(itf))
	return v.GetSource()
}

const GUIDiMediaBinder string = "2b7e40aa-de07-424f-83f1-f1de46c4fa2e"
const SignatureiMediaBinder string = "{2b7e40aa-de07-424f-83f1-f1de46c4fa2e}"

type iMediaBinder struct {
	ole.IInspectable
}

type iMediaBinderVtbl struct {
	ole.IInspectableVtbl

	AddBinding    uintptr
	RemoveBinding uintptr
	GetToken      uintptr
	SetToken      uintptr
	GetSource     uintptr
}

func (v *iMediaBinder) VTable() *iMediaBinderVtbl {
	return (*iMediaBinderVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaBinder) AddBinding(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddBinding,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaBinder) RemoveBinding(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveBinding,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaBinder) GetToken() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetToken,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iMediaBinder) SetToken(value string) error {
	valueHStr, err := ole.NewHString(value)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetToken,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(valueHStr),         // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaBinder) GetSource() (*MediaSource, error) {
	var out *MediaSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetSource,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out MediaSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
