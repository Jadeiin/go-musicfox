// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package core

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/media/protection"
	"github.com/saltosystems/winrt-go/windows/storage/fileproperties"
	"github.com/saltosystems/winrt-go/windows/storage/streams"
)

const SignatureMediaStreamSource string = "rc(Windows.Media.Core.MediaStreamSource;{3712d543-45eb-4138-aa62-c01e26f3843f})"

type MediaStreamSource struct {
	ole.IUnknown
}

func (impl *MediaStreamSource) AddClosed(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.AddClosed(handler)
}

func (impl *MediaStreamSource) RemoveClosed(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.RemoveClosed(token)
}

func (impl *MediaStreamSource) AddStarting(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.AddStarting(handler)
}

func (impl *MediaStreamSource) RemoveStarting(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.RemoveStarting(token)
}

func (impl *MediaStreamSource) AddPaused(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.AddPaused(handler)
}

func (impl *MediaStreamSource) RemovePaused(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.RemovePaused(token)
}

func (impl *MediaStreamSource) AddSampleRequested(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.AddSampleRequested(handler)
}

func (impl *MediaStreamSource) RemoveSampleRequested(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.RemoveSampleRequested(token)
}

func (impl *MediaStreamSource) AddSwitchStreamsRequested(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.AddSwitchStreamsRequested(handler)
}

func (impl *MediaStreamSource) RemoveSwitchStreamsRequested(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.RemoveSwitchStreamsRequested(token)
}

func (impl *MediaStreamSource) NotifyError(errorStatus MediaStreamSourceErrorStatus) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.NotifyError(errorStatus)
}

func (impl *MediaStreamSource) AddStreamDescriptor(descriptor *IMediaStreamDescriptor) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.AddStreamDescriptor(descriptor)
}

func (impl *MediaStreamSource) SetMediaProtectionManager(value *protection.MediaProtectionManager) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.SetMediaProtectionManager(value)
}

func (impl *MediaStreamSource) GetMediaProtectionManager() (*protection.MediaProtectionManager, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.GetMediaProtectionManager()
}

func (impl *MediaStreamSource) SetDuration(value foundation.TimeSpan) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.SetDuration(value)
}

func (impl *MediaStreamSource) GetDuration() (foundation.TimeSpan, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.GetDuration()
}

func (impl *MediaStreamSource) SetCanSeek(value bool) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.SetCanSeek(value)
}

func (impl *MediaStreamSource) GetCanSeek() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.GetCanSeek()
}

func (impl *MediaStreamSource) SetBufferTime(value foundation.TimeSpan) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.SetBufferTime(value)
}

func (impl *MediaStreamSource) GetBufferTime() (foundation.TimeSpan, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.GetBufferTime()
}

func (impl *MediaStreamSource) SetBufferedRange(startOffset foundation.TimeSpan, endOffset foundation.TimeSpan) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.SetBufferedRange(startOffset, endOffset)
}

func (impl *MediaStreamSource) GetMusicProperties() (*fileproperties.MusicProperties, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.GetMusicProperties()
}

func (impl *MediaStreamSource) GetVideoProperties() (*fileproperties.VideoProperties, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.GetVideoProperties()
}

func (impl *MediaStreamSource) SetThumbnail(value *streams.IRandomAccessStreamReference) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.SetThumbnail(value)
}

func (impl *MediaStreamSource) GetThumbnail() (*streams.IRandomAccessStreamReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.GetThumbnail()
}

func (impl *MediaStreamSource) AddProtectionKey(streamDescriptor *IMediaStreamDescriptor, keyIdentifierSize uint32, keyIdentifier []uint8, licenseDataSize uint32, licenseData []uint8) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource))
	defer itf.Release()
	v := (*iMediaStreamSource)(unsafe.Pointer(itf))
	return v.AddProtectionKey(streamDescriptor, keyIdentifierSize, keyIdentifier, licenseDataSize, licenseData)
}

func (impl *MediaStreamSource) AddSampleRendered(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource2))
	defer itf.Release()
	v := (*iMediaStreamSource2)(unsafe.Pointer(itf))
	return v.AddSampleRendered(handler)
}

func (impl *MediaStreamSource) RemoveSampleRendered(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource2))
	defer itf.Release()
	v := (*iMediaStreamSource2)(unsafe.Pointer(itf))
	return v.RemoveSampleRendered(token)
}

func (impl *MediaStreamSource) SetMaxSupportedPlaybackRate(value *foundation.IReference) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource3))
	defer itf.Release()
	v := (*iMediaStreamSource3)(unsafe.Pointer(itf))
	return v.SetMaxSupportedPlaybackRate(value)
}

func (impl *MediaStreamSource) GetMaxSupportedPlaybackRate() (*foundation.IReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource3))
	defer itf.Release()
	v := (*iMediaStreamSource3)(unsafe.Pointer(itf))
	return v.GetMaxSupportedPlaybackRate()
}

func (impl *MediaStreamSource) SetIsLive(value bool) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource4))
	defer itf.Release()
	v := (*iMediaStreamSource4)(unsafe.Pointer(itf))
	return v.SetIsLive(value)
}

func (impl *MediaStreamSource) GetIsLive() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaStreamSource4))
	defer itf.Release()
	v := (*iMediaStreamSource4)(unsafe.Pointer(itf))
	return v.GetIsLive()
}

const GUIDiMediaStreamSource string = "3712d543-45eb-4138-aa62-c01e26f3843f"
const SignatureiMediaStreamSource string = "{3712d543-45eb-4138-aa62-c01e26f3843f}"

type iMediaStreamSource struct {
	ole.IInspectable
}

type iMediaStreamSourceVtbl struct {
	ole.IInspectableVtbl

	AddClosed                    uintptr
	RemoveClosed                 uintptr
	AddStarting                  uintptr
	RemoveStarting               uintptr
	AddPaused                    uintptr
	RemovePaused                 uintptr
	AddSampleRequested           uintptr
	RemoveSampleRequested        uintptr
	AddSwitchStreamsRequested    uintptr
	RemoveSwitchStreamsRequested uintptr
	NotifyError                  uintptr
	AddStreamDescriptor          uintptr
	SetMediaProtectionManager    uintptr
	GetMediaProtectionManager    uintptr
	SetDuration                  uintptr
	GetDuration                  uintptr
	SetCanSeek                   uintptr
	GetCanSeek                   uintptr
	SetBufferTime                uintptr
	GetBufferTime                uintptr
	SetBufferedRange             uintptr
	GetMusicProperties           uintptr
	GetVideoProperties           uintptr
	SetThumbnail                 uintptr
	GetThumbnail                 uintptr
	AddProtectionKey             uintptr
}

func (v *iMediaStreamSource) VTable() *iMediaStreamSourceVtbl {
	return (*iMediaStreamSourceVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaStreamSource) AddClosed(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddClosed,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) RemoveClosed(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveClosed,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) AddStarting(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddStarting,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) RemoveStarting(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveStarting,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) AddPaused(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPaused,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) RemovePaused(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePaused,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) AddSampleRequested(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddSampleRequested,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) RemoveSampleRequested(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveSampleRequested,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) AddSwitchStreamsRequested(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddSwitchStreamsRequested,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) RemoveSwitchStreamsRequested(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveSwitchStreamsRequested,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) NotifyError(errorStatus MediaStreamSourceErrorStatus) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().NotifyError,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(errorStatus),       // in MediaStreamSourceErrorStatus
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) AddStreamDescriptor(descriptor *IMediaStreamDescriptor) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddStreamDescriptor,
		uintptr(unsafe.Pointer(v)),          // this
		uintptr(unsafe.Pointer(descriptor)), // in IMediaStreamDescriptor
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) SetMediaProtectionManager(value *protection.MediaProtectionManager) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetMediaProtectionManager,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in protection.MediaProtectionManager
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) GetMediaProtectionManager() (*protection.MediaProtectionManager, error) {
	var out *protection.MediaProtectionManager
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMediaProtectionManager,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out protection.MediaProtectionManager
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) SetDuration(value foundation.TimeSpan) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetDuration,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&value)), // in foundation.TimeSpan
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) GetDuration() (foundation.TimeSpan, error) {
	var out foundation.TimeSpan
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDuration,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.TimeSpan
	)

	if hr != 0 {
		return foundation.TimeSpan{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) SetCanSeek(value bool) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetCanSeek,
		uintptr(unsafe.Pointer(v)),                // this
		uintptr(*(*byte)(unsafe.Pointer(&value))), // in bool
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) GetCanSeek() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCanSeek,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) SetBufferTime(value foundation.TimeSpan) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetBufferTime,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&value)), // in foundation.TimeSpan
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) GetBufferTime() (foundation.TimeSpan, error) {
	var out foundation.TimeSpan
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetBufferTime,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.TimeSpan
	)

	if hr != 0 {
		return foundation.TimeSpan{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) SetBufferedRange(startOffset foundation.TimeSpan, endOffset foundation.TimeSpan) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetBufferedRange,
		uintptr(unsafe.Pointer(v)),            // this
		uintptr(unsafe.Pointer(&startOffset)), // in foundation.TimeSpan
		uintptr(unsafe.Pointer(&endOffset)),   // in foundation.TimeSpan
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) GetMusicProperties() (*fileproperties.MusicProperties, error) {
	var out *fileproperties.MusicProperties
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMusicProperties,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out fileproperties.MusicProperties
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) GetVideoProperties() (*fileproperties.VideoProperties, error) {
	var out *fileproperties.VideoProperties
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetVideoProperties,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out fileproperties.VideoProperties
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) SetThumbnail(value *streams.IRandomAccessStreamReference) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetThumbnail,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in streams.IRandomAccessStreamReference
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource) GetThumbnail() (*streams.IRandomAccessStreamReference, error) {
	var out *streams.IRandomAccessStreamReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetThumbnail,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out streams.IRandomAccessStreamReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource) AddProtectionKey(streamDescriptor *IMediaStreamDescriptor, keyIdentifierSize uint32, keyIdentifier []uint8, licenseDataSize uint32, licenseData []uint8) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddProtectionKey,
		uintptr(unsafe.Pointer(v)),                 // this
		uintptr(unsafe.Pointer(streamDescriptor)),  // in IMediaStreamDescriptor
		uintptr(keyIdentifierSize),                 // in uint32
		uintptr(unsafe.Pointer(&keyIdentifier[0])), // in uint8
		uintptr(licenseDataSize),                   // in uint32
		uintptr(unsafe.Pointer(&licenseData[0])),   // in uint8
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiMediaStreamSource2 string = "ec55d0ad-2e6a-4f74-adbb-b562d1533849"
const SignatureiMediaStreamSource2 string = "{ec55d0ad-2e6a-4f74-adbb-b562d1533849}"

type iMediaStreamSource2 struct {
	ole.IInspectable
}

type iMediaStreamSource2Vtbl struct {
	ole.IInspectableVtbl

	AddSampleRendered    uintptr
	RemoveSampleRendered uintptr
}

func (v *iMediaStreamSource2) VTable() *iMediaStreamSource2Vtbl {
	return (*iMediaStreamSource2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaStreamSource2) AddSampleRendered(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddSampleRendered,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaStreamSource2) RemoveSampleRendered(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveSampleRendered,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiMediaStreamSource3 string = "6a2a2746-3ddd-4ddf-a121-94045ecf9440"
const SignatureiMediaStreamSource3 string = "{6a2a2746-3ddd-4ddf-a121-94045ecf9440}"

type iMediaStreamSource3 struct {
	ole.IInspectable
}

type iMediaStreamSource3Vtbl struct {
	ole.IInspectableVtbl

	SetMaxSupportedPlaybackRate uintptr
	GetMaxSupportedPlaybackRate uintptr
}

func (v *iMediaStreamSource3) VTable() *iMediaStreamSource3Vtbl {
	return (*iMediaStreamSource3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaStreamSource3) SetMaxSupportedPlaybackRate(value *foundation.IReference) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetMaxSupportedPlaybackRate,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.IReference
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource3) GetMaxSupportedPlaybackRate() (*foundation.IReference, error) {
	var out *foundation.IReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMaxSupportedPlaybackRate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaStreamSource4 string = "1d0cfcab-830d-417c-a3a9-2454fd6415c7"
const SignatureiMediaStreamSource4 string = "{1d0cfcab-830d-417c-a3a9-2454fd6415c7}"

type iMediaStreamSource4 struct {
	ole.IInspectable
}

type iMediaStreamSource4Vtbl struct {
	ole.IInspectableVtbl

	SetIsLive uintptr
	GetIsLive uintptr
}

func (v *iMediaStreamSource4) VTable() *iMediaStreamSource4Vtbl {
	return (*iMediaStreamSource4Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaStreamSource4) SetIsLive(value bool) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetIsLive,
		uintptr(unsafe.Pointer(v)),                // this
		uintptr(*(*byte)(unsafe.Pointer(&value))), // in bool
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaStreamSource4) GetIsLive() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsLive,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiMediaStreamSourceFactory string = "ef77e0d9-d158-4b7a-863f-203342fbfd41"
const SignatureiMediaStreamSourceFactory string = "{ef77e0d9-d158-4b7a-863f-203342fbfd41}"

type iMediaStreamSourceFactory struct {
	ole.IInspectable
}

type iMediaStreamSourceFactoryVtbl struct {
	ole.IInspectableVtbl

	MediaStreamSourceCreateFromDescriptor  uintptr
	MediaStreamSourceCreateFromDescriptors uintptr
}

func (v *iMediaStreamSourceFactory) VTable() *iMediaStreamSourceFactoryVtbl {
	return (*iMediaStreamSourceFactoryVtbl)(unsafe.Pointer(v.RawVTable))
}

func MediaStreamSourceCreateFromDescriptor(descriptor *IMediaStreamDescriptor) (*MediaStreamSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaStreamSource", ole.NewGUID(GUIDiMediaStreamSourceFactory))
	if err != nil {
		return nil, err
	}
	v := (*iMediaStreamSourceFactory)(unsafe.Pointer(inspectable))

	var out *MediaStreamSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaStreamSourceCreateFromDescriptor,
		0,                                   // this is a static func, so there's no this
		uintptr(unsafe.Pointer(descriptor)), // in IMediaStreamDescriptor
		uintptr(unsafe.Pointer(&out)),       // out MediaStreamSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func MediaStreamSourceCreateFromDescriptors(descriptor *IMediaStreamDescriptor, descriptor2 *IMediaStreamDescriptor) (*MediaStreamSource, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Core.MediaStreamSource", ole.NewGUID(GUIDiMediaStreamSourceFactory))
	if err != nil {
		return nil, err
	}
	v := (*iMediaStreamSourceFactory)(unsafe.Pointer(inspectable))

	var out *MediaStreamSource
	hr, _, _ := syscall.SyscallN(
		v.VTable().MediaStreamSourceCreateFromDescriptors,
		0,                                    // this is a static func, so there's no this
		uintptr(unsafe.Pointer(descriptor)),  // in IMediaStreamDescriptor
		uintptr(unsafe.Pointer(descriptor2)), // in IMediaStreamDescriptor
		uintptr(unsafe.Pointer(&out)),        // out MediaStreamSource
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
