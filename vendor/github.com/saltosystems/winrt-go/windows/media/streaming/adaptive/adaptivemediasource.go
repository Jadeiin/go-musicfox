// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package adaptive

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/collections"
	"github.com/saltosystems/winrt-go/windows/storage/streams"
	"github.com/saltosystems/winrt-go/windows/web/http"
)

const SignatureAdaptiveMediaSource string = "rc(Windows.Media.Streaming.Adaptive.AdaptiveMediaSource;{4c7332ef-d39f-4396-b4d9-043957a7c964})"

type AdaptiveMediaSource struct {
	ole.IUnknown
}

func (impl *AdaptiveMediaSource) GetIsLive() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetIsLive()
}

func (impl *AdaptiveMediaSource) GetDesiredLiveOffset() (foundation.TimeSpan, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetDesiredLiveOffset()
}

func (impl *AdaptiveMediaSource) SetDesiredLiveOffset(value foundation.TimeSpan) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.SetDesiredLiveOffset(value)
}

func (impl *AdaptiveMediaSource) GetInitialBitrate() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetInitialBitrate()
}

func (impl *AdaptiveMediaSource) SetInitialBitrate(value uint32) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.SetInitialBitrate(value)
}

func (impl *AdaptiveMediaSource) GetCurrentDownloadBitrate() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetCurrentDownloadBitrate()
}

func (impl *AdaptiveMediaSource) GetCurrentPlaybackBitrate() (uint32, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetCurrentPlaybackBitrate()
}

func (impl *AdaptiveMediaSource) GetAvailableBitrates() (*collections.IVectorView, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetAvailableBitrates()
}

func (impl *AdaptiveMediaSource) GetDesiredMinBitrate() (*foundation.IReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetDesiredMinBitrate()
}

func (impl *AdaptiveMediaSource) SetDesiredMinBitrate(value *foundation.IReference) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.SetDesiredMinBitrate(value)
}

func (impl *AdaptiveMediaSource) GetDesiredMaxBitrate() (*foundation.IReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetDesiredMaxBitrate()
}

func (impl *AdaptiveMediaSource) SetDesiredMaxBitrate(value *foundation.IReference) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.SetDesiredMaxBitrate(value)
}

func (impl *AdaptiveMediaSource) GetAudioOnlyPlayback() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetAudioOnlyPlayback()
}

func (impl *AdaptiveMediaSource) GetInboundBitsPerSecond() (uint64, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetInboundBitsPerSecond()
}

func (impl *AdaptiveMediaSource) GetInboundBitsPerSecondWindow() (foundation.TimeSpan, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.GetInboundBitsPerSecondWindow()
}

func (impl *AdaptiveMediaSource) SetInboundBitsPerSecondWindow(value foundation.TimeSpan) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.SetInboundBitsPerSecondWindow(value)
}

func (impl *AdaptiveMediaSource) AddDownloadBitrateChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.AddDownloadBitrateChanged(handler)
}

func (impl *AdaptiveMediaSource) RemoveDownloadBitrateChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.RemoveDownloadBitrateChanged(token)
}

func (impl *AdaptiveMediaSource) AddPlaybackBitrateChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.AddPlaybackBitrateChanged(handler)
}

func (impl *AdaptiveMediaSource) RemovePlaybackBitrateChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.RemovePlaybackBitrateChanged(token)
}

func (impl *AdaptiveMediaSource) AddDownloadRequested(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.AddDownloadRequested(handler)
}

func (impl *AdaptiveMediaSource) RemoveDownloadRequested(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.RemoveDownloadRequested(token)
}

func (impl *AdaptiveMediaSource) AddDownloadCompleted(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.AddDownloadCompleted(handler)
}

func (impl *AdaptiveMediaSource) RemoveDownloadCompleted(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.RemoveDownloadCompleted(token)
}

func (impl *AdaptiveMediaSource) AddDownloadFailed(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.AddDownloadFailed(handler)
}

func (impl *AdaptiveMediaSource) RemoveDownloadFailed(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource))
	defer itf.Release()
	v := (*iAdaptiveMediaSource)(unsafe.Pointer(itf))
	return v.RemoveDownloadFailed(token)
}

func (impl *AdaptiveMediaSource) GetAdvancedSettings() (*AdaptiveMediaSourceAdvancedSettings, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource2))
	defer itf.Release()
	v := (*iAdaptiveMediaSource2)(unsafe.Pointer(itf))
	return v.GetAdvancedSettings()
}

func (impl *AdaptiveMediaSource) GetMinLiveOffset() (*foundation.IReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource3))
	defer itf.Release()
	v := (*iAdaptiveMediaSource3)(unsafe.Pointer(itf))
	return v.GetMinLiveOffset()
}

func (impl *AdaptiveMediaSource) GetMaxSeekableWindowSize() (*foundation.IReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource3))
	defer itf.Release()
	v := (*iAdaptiveMediaSource3)(unsafe.Pointer(itf))
	return v.GetMaxSeekableWindowSize()
}

func (impl *AdaptiveMediaSource) GetDesiredSeekableWindowSize() (*foundation.IReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource3))
	defer itf.Release()
	v := (*iAdaptiveMediaSource3)(unsafe.Pointer(itf))
	return v.GetDesiredSeekableWindowSize()
}

func (impl *AdaptiveMediaSource) SetDesiredSeekableWindowSize(value *foundation.IReference) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource3))
	defer itf.Release()
	v := (*iAdaptiveMediaSource3)(unsafe.Pointer(itf))
	return v.SetDesiredSeekableWindowSize(value)
}

func (impl *AdaptiveMediaSource) GetDiagnostics() (*AdaptiveMediaSourceDiagnostics, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource3))
	defer itf.Release()
	v := (*iAdaptiveMediaSource3)(unsafe.Pointer(itf))
	return v.GetDiagnostics()
}

func (impl *AdaptiveMediaSource) GetCorrelatedTimes() (*AdaptiveMediaSourceCorrelatedTimes, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAdaptiveMediaSource3))
	defer itf.Release()
	v := (*iAdaptiveMediaSource3)(unsafe.Pointer(itf))
	return v.GetCorrelatedTimes()
}

func (impl *AdaptiveMediaSource) Close() error {
	itf := impl.MustQueryInterface(ole.NewGUID(foundation.GUIDIClosable))
	defer itf.Release()
	v := (*foundation.IClosable)(unsafe.Pointer(itf))
	return v.Close()
}

const GUIDiAdaptiveMediaSource string = "4c7332ef-d39f-4396-b4d9-043957a7c964"
const SignatureiAdaptiveMediaSource string = "{4c7332ef-d39f-4396-b4d9-043957a7c964}"

type iAdaptiveMediaSource struct {
	ole.IInspectable
}

type iAdaptiveMediaSourceVtbl struct {
	ole.IInspectableVtbl

	GetIsLive                     uintptr
	GetDesiredLiveOffset          uintptr
	SetDesiredLiveOffset          uintptr
	GetInitialBitrate             uintptr
	SetInitialBitrate             uintptr
	GetCurrentDownloadBitrate     uintptr
	GetCurrentPlaybackBitrate     uintptr
	GetAvailableBitrates          uintptr
	GetDesiredMinBitrate          uintptr
	SetDesiredMinBitrate          uintptr
	GetDesiredMaxBitrate          uintptr
	SetDesiredMaxBitrate          uintptr
	GetAudioOnlyPlayback          uintptr
	GetInboundBitsPerSecond       uintptr
	GetInboundBitsPerSecondWindow uintptr
	SetInboundBitsPerSecondWindow uintptr
	AddDownloadBitrateChanged     uintptr
	RemoveDownloadBitrateChanged  uintptr
	AddPlaybackBitrateChanged     uintptr
	RemovePlaybackBitrateChanged  uintptr
	AddDownloadRequested          uintptr
	RemoveDownloadRequested       uintptr
	AddDownloadCompleted          uintptr
	RemoveDownloadCompleted       uintptr
	AddDownloadFailed             uintptr
	RemoveDownloadFailed          uintptr
}

func (v *iAdaptiveMediaSource) VTable() *iAdaptiveMediaSourceVtbl {
	return (*iAdaptiveMediaSourceVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iAdaptiveMediaSource) GetIsLive() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsLive,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) GetDesiredLiveOffset() (foundation.TimeSpan, error) {
	var out foundation.TimeSpan
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDesiredLiveOffset,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.TimeSpan
	)

	if hr != 0 {
		return foundation.TimeSpan{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) SetDesiredLiveOffset(value foundation.TimeSpan) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetDesiredLiveOffset,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&value)), // in foundation.TimeSpan
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) GetInitialBitrate() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetInitialBitrate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) SetInitialBitrate(value uint32) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetInitialBitrate,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(value),             // in uint32
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) GetCurrentDownloadBitrate() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCurrentDownloadBitrate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) GetCurrentPlaybackBitrate() (uint32, error) {
	var out uint32
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCurrentPlaybackBitrate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint32
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) GetAvailableBitrates() (*collections.IVectorView, error) {
	var out *collections.IVectorView
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAvailableBitrates,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVectorView
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) GetDesiredMinBitrate() (*foundation.IReference, error) {
	var out *foundation.IReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDesiredMinBitrate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) SetDesiredMinBitrate(value *foundation.IReference) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetDesiredMinBitrate,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.IReference
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) GetDesiredMaxBitrate() (*foundation.IReference, error) {
	var out *foundation.IReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDesiredMaxBitrate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) SetDesiredMaxBitrate(value *foundation.IReference) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetDesiredMaxBitrate,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.IReference
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) GetAudioOnlyPlayback() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAudioOnlyPlayback,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) GetInboundBitsPerSecond() (uint64, error) {
	var out uint64
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetInboundBitsPerSecond,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out uint64
	)

	if hr != 0 {
		return 0, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) GetInboundBitsPerSecondWindow() (foundation.TimeSpan, error) {
	var out foundation.TimeSpan
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetInboundBitsPerSecondWindow,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.TimeSpan
	)

	if hr != 0 {
		return foundation.TimeSpan{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) SetInboundBitsPerSecondWindow(value foundation.TimeSpan) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetInboundBitsPerSecondWindow,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&value)), // in foundation.TimeSpan
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) AddDownloadBitrateChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddDownloadBitrateChanged,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) RemoveDownloadBitrateChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveDownloadBitrateChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) AddPlaybackBitrateChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddPlaybackBitrateChanged,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) RemovePlaybackBitrateChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemovePlaybackBitrateChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) AddDownloadRequested(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddDownloadRequested,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) RemoveDownloadRequested(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveDownloadRequested,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) AddDownloadCompleted(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddDownloadCompleted,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) RemoveDownloadCompleted(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveDownloadCompleted,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource) AddDownloadFailed(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddDownloadFailed,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource) RemoveDownloadFailed(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveDownloadFailed,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiAdaptiveMediaSource2 string = "17890342-6760-4bb9-a58a-f7aa98b08c0e"
const SignatureiAdaptiveMediaSource2 string = "{17890342-6760-4bb9-a58a-f7aa98b08c0e}"

type iAdaptiveMediaSource2 struct {
	ole.IInspectable
}

type iAdaptiveMediaSource2Vtbl struct {
	ole.IInspectableVtbl

	GetAdvancedSettings uintptr
}

func (v *iAdaptiveMediaSource2) VTable() *iAdaptiveMediaSource2Vtbl {
	return (*iAdaptiveMediaSource2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iAdaptiveMediaSource2) GetAdvancedSettings() (*AdaptiveMediaSourceAdvancedSettings, error) {
	var out *AdaptiveMediaSourceAdvancedSettings
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAdvancedSettings,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out AdaptiveMediaSourceAdvancedSettings
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiAdaptiveMediaSource3 string = "ba7023fd-c334-461b-a36e-c99f54f7174a"
const SignatureiAdaptiveMediaSource3 string = "{ba7023fd-c334-461b-a36e-c99f54f7174a}"

type iAdaptiveMediaSource3 struct {
	ole.IInspectable
}

type iAdaptiveMediaSource3Vtbl struct {
	ole.IInspectableVtbl

	GetMinLiveOffset             uintptr
	GetMaxSeekableWindowSize     uintptr
	GetDesiredSeekableWindowSize uintptr
	SetDesiredSeekableWindowSize uintptr
	GetDiagnostics               uintptr
	GetCorrelatedTimes           uintptr
}

func (v *iAdaptiveMediaSource3) VTable() *iAdaptiveMediaSource3Vtbl {
	return (*iAdaptiveMediaSource3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iAdaptiveMediaSource3) GetMinLiveOffset() (*foundation.IReference, error) {
	var out *foundation.IReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMinLiveOffset,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource3) GetMaxSeekableWindowSize() (*foundation.IReference, error) {
	var out *foundation.IReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMaxSeekableWindowSize,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource3) GetDesiredSeekableWindowSize() (*foundation.IReference, error) {
	var out *foundation.IReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDesiredSeekableWindowSize,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource3) SetDesiredSeekableWindowSize(value *foundation.IReference) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetDesiredSeekableWindowSize,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(value)), // in foundation.IReference
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAdaptiveMediaSource3) GetDiagnostics() (*AdaptiveMediaSourceDiagnostics, error) {
	var out *AdaptiveMediaSourceDiagnostics
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDiagnostics,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out AdaptiveMediaSourceDiagnostics
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAdaptiveMediaSource3) GetCorrelatedTimes() (*AdaptiveMediaSourceCorrelatedTimes, error) {
	var out *AdaptiveMediaSourceCorrelatedTimes
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCorrelatedTimes,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out AdaptiveMediaSourceCorrelatedTimes
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiAdaptiveMediaSourceStatics string = "50a6bd5d-66ef-4cd3-9579-9e660507dc3f"
const SignatureiAdaptiveMediaSourceStatics string = "{50a6bd5d-66ef-4cd3-9579-9e660507dc3f}"

type iAdaptiveMediaSourceStatics struct {
	ole.IInspectable
}

type iAdaptiveMediaSourceStaticsVtbl struct {
	ole.IInspectableVtbl

	AdaptiveMediaSourceIsContentTypeSupported              uintptr
	AdaptiveMediaSourceCreateFromUriAsync                  uintptr
	AdaptiveMediaSourceCreateFromUriWithDownloaderAsync    uintptr
	AdaptiveMediaSourceCreateFromStreamAsync               uintptr
	AdaptiveMediaSourceCreateFromStreamWithDownloaderAsync uintptr
}

func (v *iAdaptiveMediaSourceStatics) VTable() *iAdaptiveMediaSourceStaticsVtbl {
	return (*iAdaptiveMediaSourceStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func AdaptiveMediaSourceIsContentTypeSupported(contentType string) (bool, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Streaming.Adaptive.AdaptiveMediaSource", ole.NewGUID(GUIDiAdaptiveMediaSourceStatics))
	if err != nil {
		return false, err
	}
	v := (*iAdaptiveMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out bool
	contentTypeHStr, err := ole.NewHString(contentType)
	if err != nil {
		return false, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().AdaptiveMediaSourceIsContentTypeSupported,
		0,                             // this is a static func, so there's no this
		uintptr(contentTypeHStr),      // in string
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func AdaptiveMediaSourceCreateFromUriAsync(uri *foundation.Uri) (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Streaming.Adaptive.AdaptiveMediaSource", ole.NewGUID(GUIDiAdaptiveMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAdaptiveMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().AdaptiveMediaSourceCreateFromUriAsync,
		0,                             // this is a static func, so there's no this
		uintptr(unsafe.Pointer(uri)),  // in foundation.Uri
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AdaptiveMediaSourceCreateFromUriWithDownloaderAsync(uri *foundation.Uri, httpClient *http.HttpClient) (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Streaming.Adaptive.AdaptiveMediaSource", ole.NewGUID(GUIDiAdaptiveMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAdaptiveMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().AdaptiveMediaSourceCreateFromUriWithDownloaderAsync,
		0,                                   // this is a static func, so there's no this
		uintptr(unsafe.Pointer(uri)),        // in foundation.Uri
		uintptr(unsafe.Pointer(httpClient)), // in http.HttpClient
		uintptr(unsafe.Pointer(&out)),       // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AdaptiveMediaSourceCreateFromStreamAsync(stream *streams.IInputStream, uri *foundation.Uri, contentType string) (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Streaming.Adaptive.AdaptiveMediaSource", ole.NewGUID(GUIDiAdaptiveMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAdaptiveMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	contentTypeHStr, err := ole.NewHString(contentType)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().AdaptiveMediaSourceCreateFromStreamAsync,
		0,                               // this is a static func, so there's no this
		uintptr(unsafe.Pointer(stream)), // in streams.IInputStream
		uintptr(unsafe.Pointer(uri)),    // in foundation.Uri
		uintptr(contentTypeHStr),        // in string
		uintptr(unsafe.Pointer(&out)),   // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AdaptiveMediaSourceCreateFromStreamWithDownloaderAsync(stream *streams.IInputStream, uri *foundation.Uri, contentType string, httpClient *http.HttpClient) (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Streaming.Adaptive.AdaptiveMediaSource", ole.NewGUID(GUIDiAdaptiveMediaSourceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAdaptiveMediaSourceStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	contentTypeHStr, err := ole.NewHString(contentType)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().AdaptiveMediaSourceCreateFromStreamWithDownloaderAsync,
		0,                                   // this is a static func, so there's no this
		uintptr(unsafe.Pointer(stream)),     // in streams.IInputStream
		uintptr(unsafe.Pointer(uri)),        // in foundation.Uri
		uintptr(contentTypeHStr),            // in string
		uintptr(unsafe.Pointer(httpClient)), // in http.HttpClient
		uintptr(unsafe.Pointer(&out)),       // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
