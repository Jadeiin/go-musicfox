// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package audio

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/media"
	"github.com/saltosystems/winrt-go/windows/media/capture"
	"github.com/saltosystems/winrt-go/windows/media/devices"
	"github.com/saltosystems/winrt-go/windows/media/render"
)

const SignatureAudioStateMonitor string = "rc(Windows.Media.Audio.AudioStateMonitor;{1d13d136-0199-4cdc-b84e-e72c2b581ece})"

type AudioStateMonitor struct {
	ole.IUnknown
}

func (impl *AudioStateMonitor) AddSoundLevelChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAudioStateMonitor))
	defer itf.Release()
	v := (*iAudioStateMonitor)(unsafe.Pointer(itf))
	return v.AddSoundLevelChanged(handler)
}

func (impl *AudioStateMonitor) RemoveSoundLevelChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAudioStateMonitor))
	defer itf.Release()
	v := (*iAudioStateMonitor)(unsafe.Pointer(itf))
	return v.RemoveSoundLevelChanged(token)
}

func (impl *AudioStateMonitor) GetSoundLevel() (media.SoundLevel, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiAudioStateMonitor))
	defer itf.Release()
	v := (*iAudioStateMonitor)(unsafe.Pointer(itf))
	return v.GetSoundLevel()
}

const GUIDiAudioStateMonitor string = "1d13d136-0199-4cdc-b84e-e72c2b581ece"
const SignatureiAudioStateMonitor string = "{1d13d136-0199-4cdc-b84e-e72c2b581ece}"

type iAudioStateMonitor struct {
	ole.IInspectable
}

type iAudioStateMonitorVtbl struct {
	ole.IInspectableVtbl

	AddSoundLevelChanged    uintptr
	RemoveSoundLevelChanged uintptr
	GetSoundLevel           uintptr
}

func (v *iAudioStateMonitor) VTable() *iAudioStateMonitorVtbl {
	return (*iAudioStateMonitorVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iAudioStateMonitor) AddSoundLevelChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddSoundLevelChanged,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iAudioStateMonitor) RemoveSoundLevelChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveSoundLevelChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iAudioStateMonitor) GetSoundLevel() (media.SoundLevel, error) {
	var out media.SoundLevel
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetSoundLevel,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out media.SoundLevel
	)

	if hr != 0 {
		return media.SoundLevelMuted, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiAudioStateMonitorStatics string = "6374ea4c-1b3b-4001-94d9-dd225330fa40"
const SignatureiAudioStateMonitorStatics string = "{6374ea4c-1b3b-4001-94d9-dd225330fa40}"

type iAudioStateMonitorStatics struct {
	ole.IInspectable
}

type iAudioStateMonitorStaticsVtbl struct {
	ole.IInspectableVtbl

	AudioStateMonitorCreateForRenderMonitoring                           uintptr
	AudioStateMonitorCreateForRenderMonitoringWithCategory               uintptr
	AudioStateMonitorCreateForRenderMonitoringWithCategoryAndDeviceRole  uintptr
	AudioStateMonitorCreateForRenderMonitoringWithCategoryAndDeviceId    uintptr
	AudioStateMonitorCreateForCaptureMonitoring                          uintptr
	AudioStateMonitorCreateForCaptureMonitoringWithCategory              uintptr
	AudioStateMonitorCreateForCaptureMonitoringWithCategoryAndDeviceRole uintptr
	AudioStateMonitorCreateForCaptureMonitoringWithCategoryAndDeviceId   uintptr
}

func (v *iAudioStateMonitorStatics) VTable() *iAudioStateMonitorStaticsVtbl {
	return (*iAudioStateMonitorStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func AudioStateMonitorCreateForRenderMonitoring() (*AudioStateMonitor, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Audio.AudioStateMonitor", ole.NewGUID(GUIDiAudioStateMonitorStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAudioStateMonitorStatics)(unsafe.Pointer(inspectable))

	var out *AudioStateMonitor
	hr, _, _ := syscall.SyscallN(
		v.VTable().AudioStateMonitorCreateForRenderMonitoring,
		0,                             // this is a static func, so there's no this
		uintptr(unsafe.Pointer(&out)), // out AudioStateMonitor
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AudioStateMonitorCreateForRenderMonitoringWithCategory(category render.AudioRenderCategory) (*AudioStateMonitor, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Audio.AudioStateMonitor", ole.NewGUID(GUIDiAudioStateMonitorStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAudioStateMonitorStatics)(unsafe.Pointer(inspectable))

	var out *AudioStateMonitor
	hr, _, _ := syscall.SyscallN(
		v.VTable().AudioStateMonitorCreateForRenderMonitoringWithCategory,
		0,                             // this is a static func, so there's no this
		uintptr(category),             // in render.AudioRenderCategory
		uintptr(unsafe.Pointer(&out)), // out AudioStateMonitor
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AudioStateMonitorCreateForRenderMonitoringWithCategoryAndDeviceRole(category render.AudioRenderCategory, role devices.AudioDeviceRole) (*AudioStateMonitor, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Audio.AudioStateMonitor", ole.NewGUID(GUIDiAudioStateMonitorStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAudioStateMonitorStatics)(unsafe.Pointer(inspectable))

	var out *AudioStateMonitor
	hr, _, _ := syscall.SyscallN(
		v.VTable().AudioStateMonitorCreateForRenderMonitoringWithCategoryAndDeviceRole,
		0,                             // this is a static func, so there's no this
		uintptr(category),             // in render.AudioRenderCategory
		uintptr(role),                 // in devices.AudioDeviceRole
		uintptr(unsafe.Pointer(&out)), // out AudioStateMonitor
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AudioStateMonitorCreateForRenderMonitoringWithCategoryAndDeviceId(category render.AudioRenderCategory, deviceId string) (*AudioStateMonitor, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Audio.AudioStateMonitor", ole.NewGUID(GUIDiAudioStateMonitorStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAudioStateMonitorStatics)(unsafe.Pointer(inspectable))

	var out *AudioStateMonitor
	deviceIdHStr, err := ole.NewHString(deviceId)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().AudioStateMonitorCreateForRenderMonitoringWithCategoryAndDeviceId,
		0,                             // this is a static func, so there's no this
		uintptr(category),             // in render.AudioRenderCategory
		uintptr(deviceIdHStr),         // in string
		uintptr(unsafe.Pointer(&out)), // out AudioStateMonitor
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AudioStateMonitorCreateForCaptureMonitoring() (*AudioStateMonitor, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Audio.AudioStateMonitor", ole.NewGUID(GUIDiAudioStateMonitorStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAudioStateMonitorStatics)(unsafe.Pointer(inspectable))

	var out *AudioStateMonitor
	hr, _, _ := syscall.SyscallN(
		v.VTable().AudioStateMonitorCreateForCaptureMonitoring,
		0,                             // this is a static func, so there's no this
		uintptr(unsafe.Pointer(&out)), // out AudioStateMonitor
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AudioStateMonitorCreateForCaptureMonitoringWithCategory(category capture.MediaCategory) (*AudioStateMonitor, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Audio.AudioStateMonitor", ole.NewGUID(GUIDiAudioStateMonitorStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAudioStateMonitorStatics)(unsafe.Pointer(inspectable))

	var out *AudioStateMonitor
	hr, _, _ := syscall.SyscallN(
		v.VTable().AudioStateMonitorCreateForCaptureMonitoringWithCategory,
		0,                             // this is a static func, so there's no this
		uintptr(category),             // in capture.MediaCategory
		uintptr(unsafe.Pointer(&out)), // out AudioStateMonitor
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AudioStateMonitorCreateForCaptureMonitoringWithCategoryAndDeviceRole(category capture.MediaCategory, role devices.AudioDeviceRole) (*AudioStateMonitor, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Audio.AudioStateMonitor", ole.NewGUID(GUIDiAudioStateMonitorStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAudioStateMonitorStatics)(unsafe.Pointer(inspectable))

	var out *AudioStateMonitor
	hr, _, _ := syscall.SyscallN(
		v.VTable().AudioStateMonitorCreateForCaptureMonitoringWithCategoryAndDeviceRole,
		0,                             // this is a static func, so there's no this
		uintptr(category),             // in capture.MediaCategory
		uintptr(role),                 // in devices.AudioDeviceRole
		uintptr(unsafe.Pointer(&out)), // out AudioStateMonitor
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func AudioStateMonitorCreateForCaptureMonitoringWithCategoryAndDeviceId(category capture.MediaCategory, deviceId string) (*AudioStateMonitor, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Media.Audio.AudioStateMonitor", ole.NewGUID(GUIDiAudioStateMonitorStatics))
	if err != nil {
		return nil, err
	}
	v := (*iAudioStateMonitorStatics)(unsafe.Pointer(inspectable))

	var out *AudioStateMonitor
	deviceIdHStr, err := ole.NewHString(deviceId)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().AudioStateMonitorCreateForCaptureMonitoringWithCategoryAndDeviceId,
		0,                             // this is a static func, so there's no this
		uintptr(category),             // in capture.MediaCategory
		uintptr(deviceIdHStr),         // in string
		uintptr(unsafe.Pointer(&out)), // out AudioStateMonitor
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
