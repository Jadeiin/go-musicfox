// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package protection

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
)

const SignatureMediaProtectionServiceCompletion string = "rc(Windows.Media.Protection.MediaProtectionServiceCompletion;{8b5cca18-cfd5-44ee-a2ed-df76010c14b5})"

type MediaProtectionServiceCompletion struct {
	ole.IUnknown
}

func (impl *MediaProtectionServiceCompletion) Complete(success bool) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaProtectionServiceCompletion))
	defer itf.Release()
	v := (*iMediaProtectionServiceCompletion)(unsafe.Pointer(itf))
	return v.Complete(success)
}

const GUIDiMediaProtectionServiceCompletion string = "8b5cca18-cfd5-44ee-a2ed-df76010c14b5"
const SignatureiMediaProtectionServiceCompletion string = "{8b5cca18-cfd5-44ee-a2ed-df76010c14b5}"

type iMediaProtectionServiceCompletion struct {
	ole.IInspectable
}

type iMediaProtectionServiceCompletionVtbl struct {
	ole.IInspectableVtbl

	Complete uintptr
}

func (v *iMediaProtectionServiceCompletion) VTable() *iMediaProtectionServiceCompletionVtbl {
	return (*iMediaProtectionServiceCompletionVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaProtectionServiceCompletion) Complete(success bool) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().Complete,
		uintptr(unsafe.Pointer(v)),                  // this
		uintptr(*(*byte)(unsafe.Pointer(&success))), // in bool
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}
