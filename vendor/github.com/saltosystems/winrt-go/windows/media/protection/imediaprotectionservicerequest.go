// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package protection

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
)

const GUIDIMediaProtectionServiceRequest string = "b1de0ea6-2094-478d-87a4-8b95200f85c6"
const SignatureIMediaProtectionServiceRequest string = "{b1de0ea6-2094-478d-87a4-8b95200f85c6}"

type IMediaProtectionServiceRequest struct {
	ole.IInspectable
}

type IMediaProtectionServiceRequestVtbl struct {
	ole.IInspectableVtbl

	GetProtectionSystem uintptr
	GetType             uintptr
}

func (v *IMediaProtectionServiceRequest) VTable() *IMediaProtectionServiceRequestVtbl {
	return (*IMediaProtectionServiceRequestVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IMediaProtectionServiceRequest) GetProtectionSystem() (syscall.GUID, error) {
	var out syscall.GUID
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetProtectionSystem,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out syscall.GUID
	)

	if hr != 0 {
		return syscall.GUID{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *IMediaProtectionServiceRequest) GetType() (syscall.GUID, error) {
	var out syscall.GUID
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetType,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out syscall.GUID
	)

	if hr != 0 {
		return syscall.GUID{}, ole.NewError(hr)
	}

	return out, nil
}
