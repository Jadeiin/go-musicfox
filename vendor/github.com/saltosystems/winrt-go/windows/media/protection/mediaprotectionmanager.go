// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package protection

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/collections"
)

const SignatureMediaProtectionManager string = "rc(Windows.Media.Protection.MediaProtectionManager;{45694947-c741-434b-a79e-474c12d93d2f})"

type MediaProtectionManager struct {
	ole.IUnknown
}

func NewMediaProtectionManager() (*MediaProtectionManager, error) {
	inspectable, err := ole.RoActivateInstance("Windows.Media.Protection.MediaProtectionManager")
	if err != nil {
		return nil, err
	}
	return (*MediaProtectionManager)(unsafe.Pointer(inspectable)), nil
}

func (impl *MediaProtectionManager) AddServiceRequested(handler *ServiceRequestedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaProtectionManager))
	defer itf.Release()
	v := (*iMediaProtectionManager)(unsafe.Pointer(itf))
	return v.AddServiceRequested(handler)
}

func (impl *MediaProtectionManager) RemoveServiceRequested(cookie foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaProtectionManager))
	defer itf.Release()
	v := (*iMediaProtectionManager)(unsafe.Pointer(itf))
	return v.RemoveServiceRequested(cookie)
}

func (impl *MediaProtectionManager) AddRebootNeeded(handler *RebootNeededEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaProtectionManager))
	defer itf.Release()
	v := (*iMediaProtectionManager)(unsafe.Pointer(itf))
	return v.AddRebootNeeded(handler)
}

func (impl *MediaProtectionManager) RemoveRebootNeeded(cookie foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaProtectionManager))
	defer itf.Release()
	v := (*iMediaProtectionManager)(unsafe.Pointer(itf))
	return v.RemoveRebootNeeded(cookie)
}

func (impl *MediaProtectionManager) AddComponentLoadFailed(handler *ComponentLoadFailedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaProtectionManager))
	defer itf.Release()
	v := (*iMediaProtectionManager)(unsafe.Pointer(itf))
	return v.AddComponentLoadFailed(handler)
}

func (impl *MediaProtectionManager) RemoveComponentLoadFailed(cookie foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaProtectionManager))
	defer itf.Release()
	v := (*iMediaProtectionManager)(unsafe.Pointer(itf))
	return v.RemoveComponentLoadFailed(cookie)
}

func (impl *MediaProtectionManager) GetProperties() (*collections.IPropertySet, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiMediaProtectionManager))
	defer itf.Release()
	v := (*iMediaProtectionManager)(unsafe.Pointer(itf))
	return v.GetProperties()
}

const GUIDiMediaProtectionManager string = "45694947-c741-434b-a79e-474c12d93d2f"
const SignatureiMediaProtectionManager string = "{45694947-c741-434b-a79e-474c12d93d2f}"

type iMediaProtectionManager struct {
	ole.IInspectable
}

type iMediaProtectionManagerVtbl struct {
	ole.IInspectableVtbl

	AddServiceRequested       uintptr
	RemoveServiceRequested    uintptr
	AddRebootNeeded           uintptr
	RemoveRebootNeeded        uintptr
	AddComponentLoadFailed    uintptr
	RemoveComponentLoadFailed uintptr
	GetProperties             uintptr
}

func (v *iMediaProtectionManager) VTable() *iMediaProtectionManagerVtbl {
	return (*iMediaProtectionManagerVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iMediaProtectionManager) AddServiceRequested(handler *ServiceRequestedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddServiceRequested,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in ServiceRequestedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaProtectionManager) RemoveServiceRequested(cookie foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveServiceRequested,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(&cookie)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaProtectionManager) AddRebootNeeded(handler *RebootNeededEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddRebootNeeded,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in RebootNeededEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaProtectionManager) RemoveRebootNeeded(cookie foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveRebootNeeded,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(&cookie)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaProtectionManager) AddComponentLoadFailed(handler *ComponentLoadFailedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddComponentLoadFailed,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in ComponentLoadFailedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iMediaProtectionManager) RemoveComponentLoadFailed(cookie foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveComponentLoadFailed,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(&cookie)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *iMediaProtectionManager) GetProperties() (*collections.IPropertySet, error) {
	var out *collections.IPropertySet
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetProperties,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IPropertySet
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
